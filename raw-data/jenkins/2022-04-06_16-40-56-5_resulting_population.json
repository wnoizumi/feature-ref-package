{
  "executionId" : "0c29aad0-2894-4149-9729-c5b54c077cdc",
  "computingTime" : 706862,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0736329182458038,
    "meanNumConcerns" : 1.5337361530715001,
    "meanMetricsIntensity" : 0.032969370243008465,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "fd27a992-4743-4189-a666-62475ce6b8d6",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4859175442095097,
      "MetricsIntensity" : 0.032787708864839185,
      "Density" : 0.9992954025013211
    },
    "euclideanDistance" : 9.123580748154218,
    "generation" : 5,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562244,
      "LackOfCohesion" : 0.4859175442095097,
      "MetricsIntensity" : 0.032787708864839185,
      "Density" : 3.0631749460043194
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "54dd65ab-9c7b-42bb-a108-307540ee9ed5",
    "objectives" : {
      "NumberOfConcerns" : 1.0036112934996717,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4857208630833435,
      "MetricsIntensity" : 0.032778121752955656,
      "Density" : 0.9994715518759908
    },
    "euclideanDistance" : 9.123769954001995,
    "generation" : 31,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5330992978936808,
      "LackOfCohesion" : 0.4857208630833435,
      "MetricsIntensity" : 0.03277812175295566,
      "Density" : 3.0620615218564486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a3be5b80-aee3-442b-9cb5-d27526690475",
    "objectives" : {
      "NumberOfConcerns" : 1.0036112934996717,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4857208630833435,
      "MetricsIntensity" : 0.032778121752955656,
      "Density" : 0.9994715518759908
    },
    "euclideanDistance" : 9.123769954001995,
    "generation" : 30,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5330992978936817,
      "LackOfCohesion" : 0.4857208630833435,
      "MetricsIntensity" : 0.03277812175295566,
      "Density" : 3.0620615218564486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "fc9317cc-c6b4-4218-972a-4f9521017fe6",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4865935861303002,
      "MetricsIntensity" : 0.03277019156374176,
      "Density" : 0.9998238506253303
    },
    "euclideanDistance" : 9.123782825965405,
    "generation" : 7,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532865027596588,
      "LackOfCohesion" : 0.4865935861303002,
      "MetricsIntensity" : 0.032770191563741766,
      "Density" : 3.0631408526713426
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d5fcf0e6-bc19-4a54-8459-ccbd1db1acdc",
    "objectives" : {
      "NumberOfConcerns" : 1.0032829940906107,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4865385503570476,
      "MetricsIntensity" : 0.032770191563741766,
      "Density" : 1.0
    },
    "euclideanDistance" : 9.123835290746435,
    "generation" : 31,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5333667837431006,
      "LackOfCohesion" : 0.4865385503570476,
      "MetricsIntensity" : 0.032770191563741766,
      "Density" : 3.0636805180787916
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d43a7696-8e45-49fb-9f81-d13f011be47b",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48532672175361596,
      "MetricsIntensity" : 0.03281450740430409,
      "Density" : 0.9980623568786331
    },
    "euclideanDistance" : 10.111151042622344,
    "generation" : 33,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311244979919678,
      "LackOfCohesion" : 0.48532672175361596,
      "MetricsIntensity" : 0.03281450740430409,
      "Density" : 3.061048082117774
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "4af3ce29-bd39-42cf-a78f-f911c0fecbca",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4861450929023708,
      "MetricsIntensity" : 0.03280658852378051,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 10.111210001078918,
    "generation" : 11,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730282,
      "LackOfCohesion" : 0.4861450929023708,
      "MetricsIntensity" : 0.0328065885237805,
      "Density" : 3.0626688276607243
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "c2acab19-2404-4039-81fd-f83c85ad7385",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48476102064216725,
      "MetricsIntensity" : 0.03280942971401661,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 10.111258507622834,
    "generation" : 40,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562246,
      "LackOfCohesion" : 0.48476102064216725,
      "MetricsIntensity" : 0.03280942971401661,
      "Density" : 3.061555075593953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "ac2aba46-90f5-4edd-b84a-ac4955fc27a9",
    "objectives" : {
      "NumberOfConcerns" : 1.0032829940906107,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48598818649230885,
      "MetricsIntensity" : 0.032753632602511365,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 10.111447448968239,
    "generation" : 32,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5333667837431009,
      "LackOfCohesion" : 0.48598818649230885,
      "MetricsIntensity" : 0.032753632602511365,
      "Density" : 3.061555075593953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "9fab58f2-896e-4138-b984-3d0efc52c769",
    "objectives" : {
      "NumberOfConcerns" : 1.0026263952724885,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48686153731815096,
      "MetricsIntensity" : 0.03274568746572158,
      "Density" : 0.9991192531266514
    },
    "euclideanDistance" : 10.111459113650852,
    "generation" : 34,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5331325301204815,
      "LackOfCohesion" : 0.48686153731815096,
      "MetricsIntensity" : 0.03274568746572159,
      "Density" : 3.062634989200864
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "be876b6d-2997-492d-955f-602592fb6f10",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4862006146000539,
      "MetricsIntensity" : 0.032783973490016764,
      "Density" : 1.0
    },
    "euclideanDistance" : 10.11154705997747,
    "generation" : 32,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5336345381526104,
      "LackOfCohesion" : 0.4862006146000539,
      "MetricsIntensity" : 0.032783973490016764,
      "Density" : 3.0636805180787916
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "c73b3c40-49a3-4c14-b1fb-61d74a81b89a",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.485806567658625,
      "MetricsIntensity" : 0.03282040570959936,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 11.101152301666943,
    "generation" : 6,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316582914572865,
      "LackOfCohesion" : 0.485806567658625,
      "MetricsIntensity" : 0.03282040570959936,
      "Density" : 3.062668827660722
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "3b5d82d6-c624-4aeb-a40e-9e84f20b19ca",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4859228390248267,
      "MetricsIntensity" : 0.03279740502201133,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 11.101171076346574,
    "generation" : 6,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730284,
      "LackOfCohesion" : 0.4859228390248267,
      "MetricsIntensity" : 0.03279740502201133,
      "Density" : 3.0621285791464072
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "543846b8-f90e-4d18-9f0f-1202355097f3",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48540254840982655,
      "MetricsIntensity" : 0.03280524546874774,
      "Density" : 0.9989431037519817
    },
    "euclideanDistance" : 11.101195877433456,
    "generation" : 24,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730284,
      "LackOfCohesion" : 0.48540254840982655,
      "MetricsIntensity" : 0.03280524546874774,
      "Density" : 3.0637493246893572
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "b8410152-ff3c-4cde-b8eb-ee19ae8a5e69",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4858467674588859,
      "MetricsIntensity" : 0.03277699418496759,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 11.101213137688799,
    "generation" : 27,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326633165829144,
      "LackOfCohesion" : 0.4858467674588859,
      "MetricsIntensity" : 0.032776994184967594,
      "Density" : 3.062668827660725
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "b4ac2647-9b0c-4e87-9679-5eb91e72dea8",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4856499476715127,
      "MetricsIntensity" : 0.03276740541041559,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 11.101368524793262,
    "generation" : 34,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5336345381526095,
      "LackOfCohesion" : 0.4856499476715127,
      "MetricsIntensity" : 0.03276740541041559,
      "Density" : 3.0615550755939527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "53dd1fc2-09d3-42a7-806a-eea51d5d9781",
    "objectives" : {
      "NumberOfConcerns" : 1.0026263952724885,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4864684969061732,
      "MetricsIntensity" : 0.03275946348446393,
      "Density" : 0.9992954025013211
    },
    "euclideanDistance" : 11.101422240906222,
    "generation" : 26,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5339025615268707,
      "LackOfCohesion" : 0.4864684969061732,
      "MetricsIntensity" : 0.03275946348446392,
      "Density" : 3.0631749460043203
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d11c090f-e784-49cb-b2c6-ba786b915481",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48562993864231974,
      "MetricsIntensity" : 0.03282414520280638,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 12.092700028413045,
    "generation" : 19,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316579,
      "LackOfCohesion" : 0.48562993864231974,
      "MetricsIntensity" : 0.03282414520280638,
      "Density" : 3.0632432432432437
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "037b1ada-0ea2-47d4-b742-01c730b02a12",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48476631545748394,
      "MetricsIntensity" : 0.032819138029799404,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 12.092717772528587,
    "generation" : 31,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730284,
      "LackOfCohesion" : 0.48476631545748394,
      "MetricsIntensity" : 0.032819138029799404,
      "Density" : 3.060507833603457
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f11c9391-9ad5-4eca-afc5-e390bda2c1f8",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48533821855186954,
      "MetricsIntensity" : 0.03277114078523801,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 12.092878429984887,
    "generation" : 36,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532630522088353,
      "LackOfCohesion" : 0.48533821855186954,
      "MetricsIntensity" : 0.03277114078523801,
      "Density" : 3.0615883306320906
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "3a3378eb-85d7-4e52-a3fd-b18d8e2fdadd",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48634706162486335,
      "MetricsIntensity" : 0.03276320091734412,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 12.092908170057557,
    "generation" : 37,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323957810145659,
      "LackOfCohesion" : 0.48634706162486335,
      "MetricsIntensity" : 0.03276320091734412,
      "Density" : 3.0632090761750397
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5850c3e9-8e2a-4de7-8d2a-3fef06a3cc98",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48458988096652705,
      "MetricsIntensity" : 0.03282287340462183,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 13.085550630350546,
    "generation" : 13,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5303867403314915,
      "LackOfCohesion" : 0.48458988096652705,
      "MetricsIntensity" : 0.03282287340462184,
      "Density" : 3.06108108108108
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a9a3bb5e-d447-4393-88b9-9360b8b6f8ea",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48529094253287974,
      "MetricsIntensity" : 0.03283797969356999,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 13.085580203267412,
    "generation" : 33,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318265,
      "LackOfCohesion" : 0.48529094253287974,
      "MetricsIntensity" : 0.03283797969356999,
      "Density" : 3.0632432432432437
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e4bbc9ba-2a0b-4536-b300-e30bc61681e9",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4849994352645386,
      "MetricsIntensity" : 0.03278493082784787,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 13.085745026259298,
    "generation" : 36,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5328980411853341,
      "LackOfCohesion" : 0.4849994352645386,
      "MetricsIntensity" : 0.03278493082784787,
      "Density" : 3.0615883306320906
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "fd08026f-0790-4d65-9b7d-33a851d3dc28",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48537387389079384,
      "MetricsIntensity" : 0.03280524546874773,
      "Density" : 0.9991192531266514
    },
    "euclideanDistance" : 13.085775918275342,
    "generation" : 25,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531893520843797,
      "LackOfCohesion" : 0.48537387389079384,
      "MetricsIntensity" : 0.03280524546874773,
      "Density" : 3.064289573203674
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0caa5d99-b420-46ef-a5d5-8a0a6f015742",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48581807713251096,
      "MetricsIntensity" : 0.03277699418496761,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 13.085790562788931,
    "generation" : 39,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5331658291457282,
      "LackOfCohesion" : 0.48581807713251096,
      "MetricsIntensity" : 0.03277699418496761,
      "Density" : 3.0632090761750397
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "59b6a825-39af-4428-ab5f-0c8160171c4f",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48563523929536007,
      "MetricsIntensity" : 0.03283385205033923,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 14.079406000298858,
    "generation" : 10,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145305,
      "LackOfCohesion" : 0.48563523929536007,
      "MetricsIntensity" : 0.03283385205033923,
      "Density" : 3.062195781503513
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a8e5c212-163b-4127-8f11-d2ed920a793f",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.485068914478166,
      "MetricsIntensity" : 0.03282876876171628,
      "Density" : 0.9980623568786331
    },
    "euclideanDistance" : 14.079483000345999,
    "generation" : 36,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318256,
      "LackOfCohesion" : 0.485068914478166,
      "MetricsIntensity" : 0.03282876876171628,
      "Density" : 3.062702702702703
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "3e5e76f2-bdb5-4d2a-b6a1-1450bce92da3",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48534351336718645,
      "MetricsIntensity" : 0.03278084910102082,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 14.079559067314264,
    "generation" : 38,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437974,
      "LackOfCohesion" : 0.48534351336718645,
      "MetricsIntensity" : 0.03278084910102082,
      "Density" : 3.060540540540541
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "9003cebf-92cd-490b-82a5-99ec1880ce52",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4861618937675193,
      "MetricsIntensity" : 0.03277290241675164,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 14.079601382840707,
    "generation" : 33,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.4861618937675193,
      "MetricsIntensity" : 0.03277290241675164,
      "Density" : 3.062162162162163
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "1dff3b7f-e0d2-4cd1-8d96-e033d05f9d07",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4852962461096116,
      "MetricsIntensity" : 0.03284769189512797,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 15.074106582041997,
    "generation" : 4,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530181086519115,
      "LackOfCohesion" : 0.4852962461096116,
      "MetricsIntensity" : 0.03284769189512797,
      "Density" : 3.0621957815035126
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a44af0e1-b7e5-4758-ab11-041e04a47887",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48500473299710933,
      "MetricsIntensity" : 0.03279464449256499,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 15.074249511879895,
    "generation" : 38,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.48500473299710933,
      "MetricsIntensity" : 0.032794644492564994,
      "Density" : 3.0605405405405395
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0ce418f0-b356-47ae-b56d-acef2a5c3915",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48530245835506897,
      "MetricsIntensity" : 0.03279454422435758,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 15.074307261414946,
    "generation" : 37,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532428355957767,
      "LackOfCohesion" : 0.48530245835506897,
      "MetricsIntensity" : 0.03279454422435758,
      "Density" : 3.0637837837837836
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "b7e2c8b3-fc25-4af6-96fc-6dceb7cf7e8b",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48475904985905627,
      "MetricsIntensity" : 0.032881648120203645,
      "Density" : 0.9971816100052845
    },
    "euclideanDistance" : 16.069468536070247,
    "generation" : 39,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529411764705882,
      "LackOfCohesion" : 0.48475904985905627,
      "MetricsIntensity" : 0.032881648120203645,
      "Density" : 3.0616549486208755
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "34c6ec26-15cc-4afe-95a9-1542bac59121",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48557801067709033,
      "MetricsIntensity" : 0.03287374538216524,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 16.069505647284327,
    "generation" : 17,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104636,
      "LackOfCohesion" : 0.48557801067709033,
      "MetricsIntensity" : 0.03287374538216524,
      "Density" : 3.063277447268793
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "1a7aea7a-7eaa-42ca-bbcd-498792e14e76",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.485618232650435,
      "MetricsIntensity" : 0.03283030991295284,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 16.06954758015278,
    "generation" : 27,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306841046277664,
      "LackOfCohesion" : 0.485618232650435,
      "MetricsIntensity" : 0.03283030991295284,
      "Density" : 3.063277447268793
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e1e03ac5-023e-414c-b3bb-360f81272594",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48482820129706655,
      "MetricsIntensity" : 0.032798381925445146,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 16.069561621704427,
    "generation" : 40,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311557788944723,
      "LackOfCohesion" : 0.48482820129706655,
      "MetricsIntensity" : 0.03279838192544515,
      "Density" : 3.0611141157382384
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f0fe623b-2218-40c4-b3da-34b34236d2ae",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48571386112189535,
      "MetricsIntensity" : 0.03276047420260792,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 16.069765697098823,
    "generation" : 32,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326305220883532,
      "LackOfCohesion" : 0.48571386112189535,
      "MetricsIntensity" : 0.03276047420260792,
      "Density" : 3.062162162162163
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d9d79d03-6103-47fa-948e-0391b8829d80",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48557800134822304,
      "MetricsIntensity" : 0.03290050998137854,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 17.065422996178192,
    "generation" : 4,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104632,
      "LackOfCohesion" : 0.48557800134822304,
      "MetricsIntensity" : 0.03290050998137855,
      "Density" : 3.0627366143861554
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f390946d-34a6-4f64-ac9d-1ee9ef64d6c1",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4853752848001678,
      "MetricsIntensity" : 0.03277425836831273,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 17.065649230991475,
    "generation" : 36,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5328980411853341,
      "LackOfCohesion" : 0.4853752848001678,
      "MetricsIntensity" : 0.03277425836831273,
      "Density" : 3.062162162162162
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f74512a1-eebc-4247-bbc2-0405a5b4a2b2",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48619413386193044,
      "MetricsIntensity" : 0.0327663158420479,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 17.06568416092456,
    "generation" : 39,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5331658291457284,
      "LackOfCohesion" : 0.48619413386193044,
      "MetricsIntensity" : 0.0327663158420479,
      "Density" : 3.063783783783784
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "1e98d803-aa28-4da2-9ecc-146da4ed5f6d",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4876219913648022,
      "MetricsIntensity" : 0.032852518087182474,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 18.06181726379182,
    "generation" : 20,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972358,
      "LackOfCohesion" : 0.4876219913648022,
      "MetricsIntensity" : 0.03285251808718247,
      "Density" : 3.0622294372294365
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "515afc4b-53d6-4465-9fc8-37d0b8eed499",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48710206399917355,
      "MetricsIntensity" : 0.032860397581882826,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 18.0618324216315,
    "generation" : 38,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972351,
      "LackOfCohesion" : 0.48710206399917355,
      "MetricsIntensity" : 0.03286039758188283,
      "Density" : 3.063852813852814
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "c51f2b37-a16b-4c4b-aac8-1f707e138e85",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4857191559372123,
      "MetricsIntensity" : 0.03277018251839069,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 18.061939126007328,
    "generation" : 33,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437967,
      "LackOfCohesion" : 0.4857191559372123,
      "MetricsIntensity" : 0.03277018251839069,
      "Density" : 3.061114115738238
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "4d2debec-5658-48f7-af38-b79ec2a76812",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4843146340363916,
      "MetricsIntensity" : 0.032829756923397305,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 19.058532032038965,
    "generation" : 38,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060304,
      "LackOfCohesion" : 0.4843146340363916,
      "MetricsIntensity" : 0.03282975692339731,
      "Density" : 3.0616883116883122
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5bd7ce23-d7ac-4ada-8c80-29161b164536",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.486059811112147,
      "MetricsIntensity" : 0.03285908513545789,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 19.05854209308146,
    "generation" : 30,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5286432160804022,
      "LackOfCohesion" : 0.486059811112147,
      "MetricsIntensity" : 0.03285908513545789,
      "Density" : 3.061688311688312
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "a1e7dedc-d3bb-4922-8be9-e931ef38be0b",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48728409401582695,
      "MetricsIntensity" : 0.03286636565468261,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 19.058548185767993,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018113,
      "LackOfCohesion" : 0.48728409401582695,
      "MetricsIntensity" : 0.03286636565468261,
      "Density" : 3.062229437229437
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "2fbb1b8b-1e4a-49ac-819e-d65c883c8075",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4848597061696085,
      "MetricsIntensity" : 0.03279179722476115,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 19.0586780470794,
    "generation" : 39,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.4848597061696085,
      "MetricsIntensity" : 0.032791797224761145,
      "Density" : 3.0627366143861554
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "6bbf6636-d620-47d9-8e87-627a7f6c6448",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4871796875739551,
      "MetricsIntensity" : 0.03274680407945845,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 19.05879810571121,
    "generation" : 11,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562246,
      "LackOfCohesion" : 0.4871796875739551,
      "MetricsIntensity" : 0.03274680407945845,
      "Density" : 3.0583153347732197
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "647892af-79f5-4cc7-98d6-f3fa75c1130b",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48799907964051775,
      "MetricsIntensity" : 0.0327388508029112,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 19.058829469252615,
    "generation" : 10,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323957810145654,
      "LackOfCohesion" : 0.48799907964051775,
      "MetricsIntensity" : 0.0327388508029112,
      "Density" : 3.059935205183583
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "66a70fea-6ecb-42f5-85e7-f01b64adebed",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4879990796405177,
      "MetricsIntensity" : 0.03273885080291124,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 19.058829469252615,
    "generation" : 32,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323957810145654,
      "LackOfCohesion" : 0.4879990796405177,
      "MetricsIntensity" : 0.03273885080291124,
      "Density" : 3.0599352051835855
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "12c3f79c-30b9-408b-9f7e-44bca418f4eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48628756367248094,
      "MetricsIntensity" : 0.03287801454959741,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 20.055544849014616,
    "generation" : 39,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5279034690799407,
      "LackOfCohesion" : 0.48628756367248094,
      "MetricsIntensity" : 0.03287801454959741,
      "Density" : 3.061180292365999
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "c722b4cb-ac75-49d1-8c8e-f815e1635163",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4871073675759059,
      "MetricsIntensity" : 0.032870109783440786,
      "Density" : 0.9964770125066056
    },
    "euclideanDistance" : 20.055574650842722,
    "generation" : 4,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845068,
      "LackOfCohesion" : 0.4871073675759059,
      "MetricsIntensity" : 0.032870109783440786,
      "Density" : 3.0628045479155377
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "8ad82b81-2707-4196-908d-055c0865a358",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4839750997194005,
      "MetricsIntensity" : 0.03284358688121152,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 20.05558922836738,
    "generation" : 27,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145303,
      "LackOfCohesion" : 0.4839750997194005,
      "MetricsIntensity" : 0.03284358688121152,
      "Density" : 3.061688311688312
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "7d8f3200-efa6-48a4-bd19-65221972211a",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.487824071426172,
      "MetricsIntensity" : 0.03280910656255071,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 20.05569993354093,
    "generation" : 34,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145305,
      "LackOfCohesion" : 0.487824071426172,
      "MetricsIntensity" : 0.03280910656255071,
      "Density" : 3.0627705627705626
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "1c08d3d3-ab60-4610-8821-f062a234e7b9",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4839411087399852,
      "MetricsIntensity" : 0.032833867861662695,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 20.05570639808776,
    "generation" : 24,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.4839411087399852,
      "MetricsIntensity" : 0.032833867861662695,
      "Density" : 3.063277447268793
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5a17247f-2373-4a51-b8b1-24bc7d73971a",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4867689997406511,
      "MetricsIntensity" : 0.03288397470152798,
      "Density" : 0.9964770125066056
    },
    "euclideanDistance" : 21.05291170342507,
    "generation" : 18,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528434826371414,
      "LackOfCohesion" : 0.4867689997406511,
      "MetricsIntensity" : 0.03288397470152798,
      "Density" : 3.062804547915538
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "e1f43c42-23e9-47ba-90c9-ac3b1fca2b1b",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48554850758070994,
      "MetricsIntensity" : 0.03279357219312117,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 21.053032944663357,
    "generation" : 38,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316901408450698,
      "LackOfCohesion" : 0.48554850758070994,
      "MetricsIntensity" : 0.03279357219312117,
      "Density" : 3.0627705627705635
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d4bd94e6-df4e-4c4a-897f-538df04615d3",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4865300179988832,
      "MetricsIntensity" : 0.03276431814629515,
      "Density" : 0.9971816100052845
    },
    "euclideanDistance" : 21.05312629726923,
    "generation" : 38,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730284,
      "LackOfCohesion" : 0.4865300179988832,
      "MetricsIntensity" : 0.03276431814629515,
      "Density" : 3.058346839546193
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "40085c0b-bc46-4432-9e29-589c5999a6ba",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4880043773730882,
      "MetricsIntensity" : 0.03274855230231874,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 21.053153133651186,
    "generation" : 38,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316582914572863,
      "LackOfCohesion" : 0.4880043773730882,
      "MetricsIntensity" : 0.03274855230231874,
      "Density" : 3.0588870880605072
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "6c4aefb9-260d-434d-b94d-cc0943884aae",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4867689904066353,
      "MetricsIntensity" : 0.03291074174153933,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 22.050504346106884,
    "generation" : 19,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284348263714143,
      "LackOfCohesion" : 0.4867689904066353,
      "MetricsIntensity" : 0.03291074174153933,
      "Density" : 3.0622631293990255
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "d5e339b4-de8e-46b6-8fdb-6133add8556f",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48394640939302586,
      "MetricsIntensity" : 0.03284358688121153,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 22.05057003203383,
    "generation" : 25,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530417295123177,
      "LackOfCohesion" : 0.48394640939302586,
      "MetricsIntensity" : 0.03284358688121153,
      "Density" : 3.0622294372294374
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e3776964-f015-4688-96e3-26731e1a2867",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4850111722664989,
      "MetricsIntensity" : 0.03282755534496647,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 22.050608283454554,
    "generation" : 37,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318254,
      "LackOfCohesion" : 0.4850111722664989,
      "MetricsIntensity" : 0.03282755534496647,
      "Density" : 3.0622294372294374
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "b72ebece-5c38-4820-bf16-e5d673d3db13",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48766510384713807,
      "MetricsIntensity" : 0.03279211611242346,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 22.050644971031726,
    "generation" : 19,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145307,
      "LackOfCohesion" : 0.48766510384713807,
      "MetricsIntensity" : 0.03279211611242346,
      "Density" : 3.0594594594594584
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "6993c4ba-3304-4569-adca-f62bf6e11d8c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4841731218821191,
      "MetricsIntensity" : 0.03286251818788273,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 23.048307697157178,
    "generation" : 8,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104634,
      "LackOfCohesion" : 0.4841731218821191,
      "MetricsIntensity" : 0.03286251818788273,
      "Density" : 3.0617217108825123
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "b028ef41-2ac5-4221-8150-3dbfa4f99aa5",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4870509104733233,
      "MetricsIntensity" : 0.03293680958292501,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 23.048320236793295,
    "generation" : 15,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.4870509104733233,
      "MetricsIntensity" : 0.03293680958292501,
      "Density" : 3.0633459664320517
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "dab3dc1c-6de7-424c-8570-557fd24994d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4870509104733232,
      "MetricsIntensity" : 0.03293680958292502,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 23.048320236793295,
    "generation" : 37,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.4870509104733232,
      "MetricsIntensity" : 0.03293680958292502,
      "Density" : 3.0633459664320517
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "d7abf413-ea98-455c-a1ab-cb4024fad064",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4867402777472492,
      "MetricsIntensity" : 0.03288397470152799,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 23.048342002978625,
    "generation" : 28,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289380976346247,
      "LackOfCohesion" : 0.4867402777472492,
      "MetricsIntensity" : 0.03288397470152799,
      "Density" : 3.0633459664320517
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "ea385458-88f7-4dc0-9172-838437d4e3a4",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4860490669151034,
      "MetricsIntensity" : 0.032791570542566914,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 23.048346079800474,
    "generation" : 12,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058816,
      "LackOfCohesion" : 0.4860490669151034,
      "MetricsIntensity" : 0.032791570542566914,
      "Density" : 3.0573282855597617
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "cd3d05d6-6098-4072-823f-8c4fb49e003c",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4865353157314537,
      "MetricsIntensity" : 0.03277403181101225,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 23.04843608925544,
    "generation" : 13,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.4865353157314537,
      "MetricsIntensity" : 0.03277403181101225,
      "Density" : 3.057297297297298
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "aa992ba8-7299-437d-b17a-8acc37716e4d",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4868277477766771,
      "MetricsIntensity" : 0.032867313205919665,
      "Density" : 0.9964770125066056
    },
    "euclideanDistance" : 24.046326165552692,
    "generation" : 25,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845072,
      "LackOfCohesion" : 0.4868277477766771,
      "MetricsIntensity" : 0.032867313205919665,
      "Density" : 3.064463705308776
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "dd7daa95-28c7-4c80-b09f-2eecaf10be0d",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48575259358729866,
      "MetricsIntensity" : 0.03281607926849957,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 24.046393435103923,
    "generation" : 37,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060306,
      "LackOfCohesion" : 0.48575259358729866,
      "MetricsIntensity" : 0.03281607926849956,
      "Density" : 3.0583783783783782
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "72cdd122-7ad3-418c-84ad-83878607f177",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4870098782513969,
      "MetricsIntensity" : 0.03287328457235785,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 25.04444593434054,
    "generation" : 10,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528434826371414,
      "LackOfCohesion" : 0.4870098782513969,
      "MetricsIntensity" : 0.03287328457235785,
      "Density" : 3.0628385698808227
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "e3c3aabb-4fa8-4bf6-a6a2-9d4915d15370",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4873481038959471,
      "MetricsIntensity" : 0.03288617654390835,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 25.044458598358172,
    "generation" : 29,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528169014084507,
      "LackOfCohesion" : 0.4873481038959471,
      "MetricsIntensity" : 0.03288617654390835,
      "Density" : 3.062296858071506
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "2f2c365d-e548-4ddf-b132-d5be7d54119f",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4869058675345123,
      "MetricsIntensity" : 0.03275364568676,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 25.04463594399813,
    "generation" : 37,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730287,
      "LackOfCohesion" : 0.4869058675345123,
      "MetricsIntensity" : 0.03275364568676001,
      "Density" : 3.0589189189189185
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a41c268d-7037-4d35-8d3f-deff8573df62",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4868330542803276,
      "MetricsIntensity" : 0.03287703076741228,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 26.04269743518279,
    "generation" : 15,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449926,
      "LackOfCohesion" : 0.4868330542803276,
      "MetricsIntensity" : 0.03287703076741228,
      "Density" : 3.0634146341463424
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "55646629-a212-472d-9657-b7242bfde383",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48605317147291244,
      "MetricsIntensity" : 0.032841497697693664,
      "Density" : 0.9950678175092479
    },
    "euclideanDistance" : 26.042700326930763,
    "generation" : 36,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845068,
      "LackOfCohesion" : 0.48605317147291244,
      "MetricsIntensity" : 0.032841497697693664,
      "Density" : 3.0617886178861786
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "c623d243-5990-494d-88fd-4c0b05ef305c",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48601916174502513,
      "MetricsIntensity" : 0.032831773317406,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 26.042790409737126,
    "generation" : 37,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058822,
      "LackOfCohesion" : 0.48601916174502513,
      "MetricsIntensity" : 0.032831773317406,
      "Density" : 3.063380281690141
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "7e559261-90f7-4d18-a299-e2d4357518c2",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.486494348134123,
      "MetricsIntensity" : 0.03289090716308204,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 27.041100325638716,
    "generation" : 16,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989928,
      "LackOfCohesion" : 0.486494348134123,
      "MetricsIntensity" : 0.03289090716308204,
      "Density" : 3.063414634146342
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "9db07fc3-8ea6-4e15-a2dd-58c76a111421",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4880358189845458,
      "MetricsIntensity" : 0.03281023657941016,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 27.041187664617183,
    "generation" : 39,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284062342885865,
      "LackOfCohesion" : 0.4880358189845458,
      "MetricsIntensity" : 0.032810236579410165,
      "Density" : 3.057359307359308
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "a73a223d-14f0-4907-afaf-3b96221fc2b4",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48576901761732993,
      "MetricsIntensity" : 0.03278872000878527,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 27.041190518731657,
    "generation" : 31,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058818,
      "LackOfCohesion" : 0.48576901761732993,
      "MetricsIntensity" : 0.03278872000878527,
      "Density" : 3.058982683982684
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "846ee638-4a5f-4344-94ec-85cda320bc87",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48833705421962065,
      "MetricsIntensity" : 0.03281015346567603,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 27.041219907468847,
    "generation" : 31,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.48833705421962065,
      "MetricsIntensity" : 0.03281015346567603,
      "Density" : 3.0606060606060597
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "918c0587-7fbb-4d3f-9103-18d8d0568998",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4862556888692447,
      "MetricsIntensity" : 0.032771173180098444,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 27.041267240176204,
    "generation" : 36,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.4862556888692447,
      "MetricsIntensity" : 0.032771173180098444,
      "Density" : 3.058950784207679
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e674c239-b9e2-4f5e-b7d8-339885380b88",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48595589774751574,
      "MetricsIntensity" : 0.03292487701794922,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 28.039619018890207,
    "generation" : 38,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817817,
      "LackOfCohesion" : 0.48595589774751574,
      "MetricsIntensity" : 0.03292487701794922,
      "Density" : 3.062872628726287
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "e2604ef4-1bef-4db0-bd5d-79ac7021d7ca",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48595589774751585,
      "MetricsIntensity" : 0.03292487701794921,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 28.039619018890207,
    "generation" : 41,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817817,
      "LackOfCohesion" : 0.48595589774751585,
      "MetricsIntensity" : 0.0329248770179492,
      "Density" : 3.062872628726287
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "7c8c12d8-7f6a-4236-a87a-069a6510e150",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48677642387174763,
      "MetricsIntensity" : 0.03291698942260635,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 28.039640346983678,
    "generation" : 6,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271903323262837,
      "LackOfCohesion" : 0.48677642387174763,
      "MetricsIntensity" : 0.03291698942260636,
      "Density" : 3.0644986449864495
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "8b7e5960-b628-4924-b577-c1cae0bd221d",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48881635587440314,
      "MetricsIntensity" : 0.03287248380058821,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 28.039709935999017,
    "generation" : 39,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276659959758563,
      "LackOfCohesion" : 0.48881635587440314,
      "MetricsIntensity" : 0.03287248380058821,
      "Density" : 3.058441558441559
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "ad7e276f-68cf-4d61-b6ff-2fe722cc94fc",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4880730015772541,
      "MetricsIntensity" : 0.0328443882707104,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 28.039715722434224,
    "generation" : 18,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527665995975855,
      "LackOfCohesion" : 0.4880730015772541,
      "MetricsIntensity" : 0.0328443882707104,
      "Density" : 3.060064935064935
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "6607a0af-f951-4dc8-b983-6d27a8da922a",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4890981297707496,
      "MetricsIntensity" : 0.03287178629436351,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 28.039721945306564,
    "generation" : 34,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271629778672033,
      "LackOfCohesion" : 0.4890981297707496,
      "MetricsIntensity" : 0.03287178629436351,
      "Density" : 3.0600649350649345
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "a195d73a-40e8-48c4-ac1c-4acb6e52a7f0",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48739124948678736,
      "MetricsIntensity" : 0.032798990259850544,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 28.03973884929005,
    "generation" : 39,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529175050301812,
      "LackOfCohesion" : 0.48739124948678736,
      "MetricsIntensity" : 0.032798990259850544,
      "Density" : 3.0600649350649345
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "8b6887e3-ed90-4736-adef-51d738bdce87",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48913835174409387,
      "MetricsIntensity" : 0.032828350825151086,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 28.03974594358034,
    "generation" : 18,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845068,
      "LackOfCohesion" : 0.48913835174409387,
      "MetricsIntensity" : 0.03282835082515109,
      "Density" : 3.0600649350649345
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "26c0e789-2ad9-464f-96a2-16ea9e78ed92",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48913835174409376,
      "MetricsIntensity" : 0.0328283508251511,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 28.03974594358034,
    "generation" : 34,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845068,
      "LackOfCohesion" : 0.48913835174409376,
      "MetricsIntensity" : 0.0328283508251511,
      "Density" : 3.060064935064935
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "1a3f9414-a711-4844-9332-caebfa41a089",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4854725352354844,
      "MetricsIntensity" : 0.03281324381700001,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 28.03977113048556,
    "generation" : 38,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060306,
      "LackOfCohesion" : 0.4854725352354844,
      "MetricsIntensity" : 0.032813243817,
      "Density" : 3.0600324499729585
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "9400f7fd-df7c-4fcb-99a4-8bbf5e6590ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4867764145325779,
      "MetricsIntensity" : 0.03294377121890281,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 29.03826926148608,
    "generation" : 13,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271903323262839,
      "LackOfCohesion" : 0.4867764145325779,
      "MetricsIntensity" : 0.03294377121890281,
      "Density" : 3.0639566395663955
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "39afed95-b43e-44b4-9eda-501bd1c4d0ba",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.487481201478024,
      "MetricsIntensity" : 0.032871243332875444,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 29.038273335826936,
    "generation" : 29,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5266599597585517,
      "LackOfCohesion" : 0.487481201478024,
      "MetricsIntensity" : 0.032871243332875444,
      "Density" : 3.057931781266919
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "ca08e738-87ee-421f-9f23-d08d25fbfdf7",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48655405011059544,
      "MetricsIntensity" : 0.03283395369868746,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 29.03828712079822,
    "generation" : 39,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.48655405011059544,
      "MetricsIntensity" : 0.03283395369868746,
      "Density" : 3.0595560368164585
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "71196200-9214-4938-a767-81aac1d75415",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4885840366190583,
      "MetricsIntensity" : 0.03288939833273188,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 30.03702450653396,
    "generation" : 15,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5264217413185708,
      "LackOfCohesion" : 0.4885840366190583,
      "MetricsIntensity" : 0.03288939833273188,
      "Density" : 3.0606388738494865
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "960ab0a2-7534-4528-8277-2d0918ac4e3c",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4868762143481848,
      "MetricsIntensity" : 0.03281656212380695,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 30.03704025729226,
    "generation" : 40,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284348263714143,
      "LackOfCohesion" : 0.4868762143481848,
      "MetricsIntensity" : 0.032816562123806944,
      "Density" : 3.060638873849486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e40f9027-3e5c-469e-8498-95a8eb3e6fc3",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4886242807899597,
      "MetricsIntensity" : 0.03284593889251001,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 30.03704688714274,
    "generation" : 38,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449933,
      "LackOfCohesion" : 0.4886242807899597,
      "MetricsIntensity" : 0.03284593889251001,
      "Density" : 3.060638873849486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "31dae634-505a-4564-b91b-4f7d8f5884bd",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48547783588852483,
      "MetricsIntensity" : 0.032822962836548814,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 30.037061249046005,
    "generation" : 37,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972354,
      "LackOfCohesion" : 0.48547783588852483,
      "MetricsIntensity" : 0.032822962836548814,
      "Density" : 3.058982683982684
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "bc1740a2-8748-4228-ae74-11930ef74b04",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48858402728504247,
      "MetricsIntensity" : 0.032916164065279474,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 31.03582594647655,
    "generation" : 16,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5264217413185706,
      "LackOfCohesion" : 0.48858402728504247,
      "MetricsIntensity" : 0.032916164065279474,
      "Density" : 3.0600974553329725
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "c5d55e06-d65c-4219-8278-bc78d8ac2a58",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48574561504290686,
      "MetricsIntensity" : 0.032798444389072944,
      "Density" : 0.9950678175092479
    },
    "euclideanDistance" : 31.0358381357604,
    "generation" : 30,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018116,
      "LackOfCohesion" : 0.48574561504290686,
      "MetricsIntensity" : 0.032798444389072944,
      "Density" : 3.0584731997834322
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "3f9b4c11-4ae2-4212-a12b-6174540f6c0a",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48827339455896823,
      "MetricsIntensity" : 0.03286333046739053,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 31.035842074686936,
    "generation" : 27,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449926,
      "LackOfCohesion" : 0.48827339455896823,
      "MetricsIntensity" : 0.03286333046739053,
      "Density" : 3.0600974553329707
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "5ba10396-d963-48b6-aa2c-50212c41eb32",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48857793273036665,
      "MetricsIntensity" : 0.032799463336505866,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 31.035894638195217,
    "generation" : 33,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5286720321931595,
      "LackOfCohesion" : 0.48857793273036665,
      "MetricsIntensity" : 0.032799463336505866,
      "Density" : 3.0606388738494856
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "7ce2f0d9-b298-4fee-9a5a-1f040d6ee840",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48602737961038595,
      "MetricsIntensity" : 0.03282449785216775,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 32.03472444643094,
    "generation" : 39,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.48602737961038595,
      "MetricsIntensity" : 0.03282449785216775,
      "Density" : 3.0595560368164585
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "8648fc90-5c12-4133-a313-cb99f0c80b3d",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4885553146256565,
      "MetricsIntensity" : 0.032889398332731905,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 32.03472830984278,
    "generation" : 35,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817817,
      "LackOfCohesion" : 0.4885553146256565,
      "MetricsIntensity" : 0.032889398332731905,
      "Density" : 3.061180292365999
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "e6dd8381-911f-4a1a-8b12-e5719ddd9578",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4877219471269326,
      "MetricsIntensity" : 0.03286055910008103,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 33.033626824522386,
    "generation" : 18,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.526659959758551,
      "LackOfCohesion" : 0.4877219471269326,
      "MetricsIntensity" : 0.03286055910008103,
      "Density" : 3.0579631635969666
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "10182049-a1b8-43bb-94e4-0b43b14e5ba4",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48802300207019056,
      "MetricsIntensity" : 0.0328605286022418,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 33.033653201051145,
    "generation" : 22,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817817,
      "LackOfCohesion" : 0.48802300207019056,
      "MetricsIntensity" : 0.032860528602241805,
      "Density" : 3.0612134344528714
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "13bf6fde-a5cb-488b-9eb8-4b4f3bdf18bf",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48920414517723404,
      "MetricsIntensity" : 0.03279161310531943,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 33.03373536548479,
    "generation" : 41,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529175050301811,
      "LackOfCohesion" : 0.48920414517723404,
      "MetricsIntensity" : 0.03279161310531943,
      "Density" : 3.060097455332973
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "a9ee5fb6-4045-490d-a24e-8a870ba2718d",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48854298572910015,
      "MetricsIntensity" : 0.032879406094723666,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 34.03265124262414,
    "generation" : 28,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817813,
      "LackOfCohesion" : 0.48854298572910015,
      "MetricsIntensity" : 0.032879406094723666,
      "Density" : 3.0590465872156
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "8fe4a1be-38b2-48a3-a47b-35bd1b0ba3b4",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4888249151298047,
      "MetricsIntensity" : 0.032878708203561764,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 34.03266113296157,
    "generation" : 37,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5264217413185708,
      "LackOfCohesion" : 0.4888249151298047,
      "MetricsIntensity" : 0.032878708203561764,
      "Density" : 3.060671722643553
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "84a4863a-9d88-4935-ba96-6c7de4b12c77",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48804393366775634,
      "MetricsIntensity" : 0.03284317418467391,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 34.03266327086981,
    "generation" : 36,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271629778672033,
      "LackOfCohesion" : 0.48804393366775634,
      "MetricsIntensity" : 0.03284317418467391,
      "Density" : 3.0590465872156014
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "6e18456f-cfa2-4714-97ca-eab5f8b59640",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4888651593007061,
      "MetricsIntensity" : 0.032835248763339854,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 34.03268088625402,
    "generation" : 32,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527428283844993,
      "LackOfCohesion" : 0.4888651593007061,
      "MetricsIntensity" : 0.03283524876333986,
      "Density" : 3.0606717226435536
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "7b91e7f9-60b3-41b0-aaaf-3e9fef57d549",
    "objectives" : {
      "NumberOfConcerns" : 0.9954038082731451,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4872070944925466,
      "MetricsIntensity" : 0.03287816494242606,
      "Density" : 0.9940109212612295
    },
    "euclideanDistance" : 35.03166193859157,
    "generation" : 8,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5259184700553605,
      "LackOfCohesion" : 0.4872070944925466,
      "MetricsIntensity" : 0.03287816494242606,
      "Density" : 3.0585365853658537
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "5459fb34-0ce5-4c0a-a1e9-ae2077963f15",
    "objectives" : {
      "NumberOfConcerns" : 0.995075508864084,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48802831150399306,
      "MetricsIntensity" : 0.03287025152958834,
      "Density" : 0.9945393693852387
    },
    "euclideanDistance" : 35.03167903358135,
    "generation" : 9,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5261832829808657,
      "LackOfCohesion" : 0.48802831150399306,
      "MetricsIntensity" : 0.03287025152958834,
      "Density" : 3.0601626016260157
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "d2e639e6-471c-4740-b9f6-6b8bb316ac6a",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48724733866344816,
      "MetricsIntensity" : 0.03283470259130907,
      "Density" : 0.9940109212612295
    },
    "euclideanDistance" : 35.031681120564144,
    "generation" : 35,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817817,
      "LackOfCohesion" : 0.48724733866344816,
      "MetricsIntensity" : 0.03283470259130907,
      "Density" : 3.0585365853658533
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "c8e86165-b036-4f2b-ac89-2ca0647b0fe3",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48773346294912207,
      "MetricsIntensity" : 0.0328171207215791,
      "Density" : 0.9945393693852387
    },
    "euclideanDistance" : 35.031740230239166,
    "generation" : 37,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.48773346294912207,
      "MetricsIntensity" : 0.0328171207215791,
      "Density" : 3.0585048754062836
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "75a4bf16-b30d-4de7-b7b5-f717aa7b6f8a",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48721331016639513,
      "MetricsIntensity" : 0.03282497284436561,
      "Density" : 0.9950678175092479
    },
    "euclideanDistance" : 35.03174800602013,
    "generation" : 36,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.48721331016639513,
      "MetricsIntensity" : 0.03282497284436561,
      "Density" : 3.060130010834236
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "9329e86c-e56f-40e4-97ff-bd30866ccc84",
    "objectives" : {
      "NumberOfConcerns" : 0.995075508864084,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48748901455923505,
      "MetricsIntensity" : 0.03290423278381174,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 36.03078769204889,
    "generation" : 40,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5254151987921492,
      "LackOfCohesion" : 0.48748901455923505,
      "MetricsIntensity" : 0.03290423278381174,
      "Density" : 3.059620596205963
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "b70edb4b-3fdf-4ca5-8a6b-e0c737026380",
    "objectives" : {
      "NumberOfConcerns" : 0.995075508864084,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48802830216482324,
      "MetricsIntensity" : 0.03289703206563689,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 36.03079498595727,
    "generation" : 29,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5261832829808657,
      "LackOfCohesion" : 0.48802830216482324,
      "MetricsIntensity" : 0.0328970320656369,
      "Density" : 3.0596205962059617
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "787f955b-ce58-435c-933b-af93aed42124",
    "objectives" : {
      "NumberOfConcerns" : 0.9947472094550229,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48831038724161835,
      "MetricsIntensity" : 0.03289633378911266,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 36.030804329699706,
    "generation" : 15,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5256797583081565,
      "LackOfCohesion" : 0.48831038724161835,
      "MetricsIntensity" : 0.03289633378911266,
      "Density" : 3.061246612466127
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "dcc43a6d-0f26-43bf-97a2-ef8c3e6ebf1e",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48752925873013636,
      "MetricsIntensity" : 0.03286077043269476,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 36.03080633641066,
    "generation" : 37,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5264217413185706,
      "LackOfCohesion" : 0.48752925873013636,
      "MetricsIntensity" : 0.032860770432694766,
      "Density" : 3.0596205962059626
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "05c684ff-0e12-456a-a63e-4e2070ec0af9",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4869498773497613,
      "MetricsIntensity" : 0.032859214563465154,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 36.0308403195405,
    "generation" : 36,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271629778672033,
      "LackOfCohesion" : 0.4869498773497613,
      "MetricsIntensity" : 0.032859214563465154,
      "Density" : 3.0595882990249184
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "5e478b6d-07e0-47bd-807c-0786b30d4ab5",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4871783724991451,
      "MetricsIntensity" : 0.03287816494242606,
      "Density" : 0.9941870706358993
    },
    "euclideanDistance" : 37.02996508372712,
    "generation" : 29,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5264217413185701,
      "LackOfCohesion" : 0.4871783724991451,
      "MetricsIntensity" : 0.03287816494242606,
      "Density" : 3.0590785907859073
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "aac80d2a-8dc4-4283-a49c-658335e2f8fa",
    "objectives" : {
      "NumberOfConcerns" : 0.9947472094550229,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4883103779024484,
      "MetricsIntensity" : 0.03292311430119232,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 37.02996775492254,
    "generation" : 3,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5256797583081567,
      "LackOfCohesion" : 0.4883103779024484,
      "MetricsIntensity" : 0.03292311430119232,
      "Density" : 3.060704607046071
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "81755603-d514-45df-a8e9-b7f8b136412f",
    "objectives" : {
      "NumberOfConcerns" : 0.9947472094550229,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4883103779024483,
      "MetricsIntensity" : 0.032923114301192324,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 37.02996775492254,
    "generation" : 14,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5256797583081567,
      "LackOfCohesion" : 0.4883103779024483,
      "MetricsIntensity" : 0.032923114301192324,
      "Density" : 3.060704607046071
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.PluginWrapper.PluginDisableResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.init.impl.InstallUncaughtExceptionHandler.DefaultUncaughtExceptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.Launcher.IOTriplet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "1c378fcf-daea-49a0-8c6e-31a18d0428d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9954038082731451,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.487999573650849,
      "MetricsIntensity" : 0.03287025152958835,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 37.02998125495212,
    "generation" : 31,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.526686807653575,
      "LackOfCohesion" : 0.487999573650849,
      "MetricsIntensity" : 0.03287025152958835,
      "Density" : 3.060704607046071
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.SecureFileCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "cfee06ac-a207-4c2d-9133-29213d4ba6cc",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4872186166700461,
      "MetricsIntensity" : 0.03283470259130908,
      "Density" : 0.9941870706358993
    },
    "euclideanDistance" : 37.02998323634491,
    "generation" : 11,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449929,
      "LackOfCohesion" : 0.4872186166700461,
      "MetricsIntensity" : 0.03283470259130908,
      "Density" : 3.059078590785908
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.FreeStyleBuild'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.ProcessTree.Darwin'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tools.InstallerTranslator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.Api'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.model.Api'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.LauncherDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.security.stapler.TypedFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.RingBufferLogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.ClassicPluginStrategy.DependencyClassLoader'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.cli.PlainCLIProtocol.ProtocolException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.node_monitors.ArchitectureMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.NamingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.NamingThreadFactory'"
      } ]
    } ]
  } ]
}