{
  "executionId" : "a101a3e7-83d1-498d-af75-0e6eac694f70",
  "computingTime" : 3971242,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 35,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 2.990243902439024,
    "meanNumConcerns" : 1.4843907351460226,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "c7e6498d-6720-432e-adf6-6f34ea082141",
    "objectives" : {
      "NumberOfConcerns" : 1.0010176390773406,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48879601002372525,
      "MetricsIntensity" : 0.03283793920040135,
      "Density" : 0.9972811310494835
    },
    "euclideanDistance" : 12.092832829314947,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4821697639377203,
      "LackOfCohesion" : 0.48879601002372525,
      "MetricsIntensity" : 0.03283793920040135,
      "Density" : 2.9772727272727275
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.RSAConfidentialKey.lastCS, jenkins.security.RSAConfidentialKey.pub, jenkins.security.RSAConfidentialKey.priv], extractedMethods=[jenkins.security.RSAConfidentialKey.getPrivateKey(), jenkins.security.RSAConfidentialKey.getPublicKey(), jenkins.security.RSAConfidentialKey.getEncodedPublicKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.slaves.RetentionStrategy.Demand.DescriptorImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "c0f49c50-0c64-43ce-8d67-cd9a7216c0f3",
    "objectives" : {
      "NumberOfConcerns" : 1.0010176390773406,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4886049076850463,
      "MetricsIntensity" : 0.03285415693382827,
      "Density" : 0.9969186151894145
    },
    "euclideanDistance" : 13.085705834631042,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48216976393772,
      "LackOfCohesion" : 0.4886049076850463,
      "MetricsIntensity" : 0.03285415693382827,
      "Density" : 2.9778018408229565
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.RSAConfidentialKey.lastCS, jenkins.security.RSAConfidentialKey.pub, jenkins.security.RSAConfidentialKey.priv], extractedMethods=[jenkins.security.RSAConfidentialKey.getPrivateKey(), jenkins.security.RSAConfidentialKey.getPublicKey(), jenkins.security.RSAConfidentialKey.getEncodedPublicKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.slaves.RetentionStrategy.Demand.DescriptorImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "390bda72-9a09-4d46-b6d2-33fb8a0b047b",
    "objectives" : {
      "NumberOfConcerns" : 1.0006784260515604,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48876760291932725,
      "MetricsIntensity" : 0.032835786766124024,
      "Density" : 0.9970998731194489
    },
    "euclideanDistance" : 14.079614249967785,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4816675037669524,
      "LackOfCohesion" : 0.48876760291932725,
      "MetricsIntensity" : 0.03283578676612402,
      "Density" : 2.9751216873985933
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.RSAConfidentialKey.lastCS, jenkins.security.RSAConfidentialKey.pub, jenkins.security.RSAConfidentialKey.priv], extractedMethods=[jenkins.security.RSAConfidentialKey.getPrivateKey(), jenkins.security.RSAConfidentialKey.getPublicKey(), jenkins.security.RSAConfidentialKey.getEncodedPublicKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      } ]
    } ]
  }, {
    "solutionId" : "c4fc3699-edb7-4bb2-91f3-7d3721440922",
    "objectives" : {
      "NumberOfConcerns" : 1.0006784260515604,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48862993772108954,
      "MetricsIntensity" : 0.03284500843062716,
      "Density" : 0.9969186151894145
    },
    "euclideanDistance" : 15.07431729957587,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4816675037669522,
      "LackOfCohesion" : 0.48862993772108954,
      "MetricsIntensity" : 0.032845008430627154,
      "Density" : 2.976190476190477
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.tools.InstallerTranslator'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.RSAConfidentialKey.lastCS, jenkins.security.RSAConfidentialKey.pub, jenkins.security.RSAConfidentialKey.priv], extractedMethods=[jenkins.security.RSAConfidentialKey.getPrivateKey(), jenkins.security.RSAConfidentialKey.getPublicKey(), jenkins.security.RSAConfidentialKey.getEncodedPublicKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.slaves.RetentionStrategy.Demand.DescriptorImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "96bcb7ed-ef5a-4c4e-a36b-a3868f2943d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48792303981686636,
      "MetricsIntensity" : 0.032906022561163636,
      "Density" : 0.9965560993293456
    },
    "euclideanDistance" : 16.06954391125181,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670698,
      "LackOfCohesion" : 0.48792303981686636,
      "MetricsIntensity" : 0.032906022561163636,
      "Density" : 2.981561822125814
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.util.StreamResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "c44b99ea-5cf9-479d-841c-15c14eb522d8",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48792397522622616,
      "MetricsIntensity" : 0.03290602256116363,
      "Density" : 0.9965560993293456
    },
    "euclideanDistance" : 17.065469299977266,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670692,
      "LackOfCohesion" : 0.48792397522622616,
      "MetricsIntensity" : 0.03290602256116363,
      "Density" : 2.9815618221258133
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.util.StreamResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "21529815-46c0-47e3-962b-9442aad1149e",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48797408059761077,
      "MetricsIntensity" : 0.032907962408846816,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 20.055488520447568,
    "generation" : 1,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151836,
      "LackOfCohesion" : 0.48797408059761077,
      "MetricsIntensity" : 0.032907962408846816,
      "Density" : 2.9761388286334065
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "4b94def5-b3f8-4f6f-99e7-00594ee44de1",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48798361870875717,
      "MetricsIntensity" : 0.032907962408846796,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 20.055488752523516,
    "generation" : 1,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151838,
      "LackOfCohesion" : 0.48798361870875717,
      "MetricsIntensity" : 0.0329079624088468,
      "Density" : 2.976138828633406
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "699ebf37-05dd-4da4-8d41-acefb9e6fb05",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4882383713063987,
      "MetricsIntensity" : 0.032865192305124837,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 21.052818389888518,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978887,
      "LackOfCohesion" : 0.4882383713063987,
      "MetricsIntensity" : 0.032865192305124837,
      "Density" : 2.975596529284165
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "6b2f47ff-c544-43c2-901f-4d4cb2c946a5",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4881921979307637,
      "MetricsIntensity" : 0.032865192305124816,
      "Density" : 0.9943810041689324
    },
    "euclideanDistance" : 21.05282481213554,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065358,
      "LackOfCohesion" : 0.4881921979307637,
      "MetricsIntensity" : 0.032865192305124816,
      "Density" : 2.975054229934924
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "5b779fc0-9eb6-4138-8349-2e98753b09a5",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4881921979307635,
      "MetricsIntensity" : 0.03286519230512482,
      "Density" : 0.9943810041689324
    },
    "euclideanDistance" : 21.05282481213554,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065358,
      "LackOfCohesion" : 0.4881921979307635,
      "MetricsIntensity" : 0.03286519230512482,
      "Density" : 2.975054229934924
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "6e812fc9-81f8-4430-8644-1ec269e603b0",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48819219793076346,
      "MetricsIntensity" : 0.032865417957157646,
      "Density" : 0.9943810041689324
    },
    "euclideanDistance" : 21.052824812487803,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065356,
      "LackOfCohesion" : 0.48819219793076346,
      "MetricsIntensity" : 0.032865417957157646,
      "Density" : 2.9750542299349245
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "76d747f7-a223-4061-b1cd-8814a1d376cc",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4880869695108399,
      "MetricsIntensity" : 0.03286519230512481,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 21.052855558502053,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151836,
      "LackOfCohesion" : 0.4880869695108399,
      "MetricsIntensity" : 0.03286519230512481,
      "Density" : 2.9761388286334056
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "2d85af8a-ba36-4fbc-a2bb-5a95bb0c9634",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4878786152961461,
      "MetricsIntensity" : 0.032908188709305015,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 21.052892562428642,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238307,
      "LackOfCohesion" : 0.4878786152961461,
      "MetricsIntensity" : 0.03290818870930501,
      "Density" : 2.976151761517616
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "c7a1f034-09f7-4797-bdfa-1999f3ba8bb6",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4878483117544628,
      "MetricsIntensity" : 0.03290725359992264,
      "Density" : 0.9954685517491391
    },
    "euclideanDistance" : 21.052916500000425,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478632478632479,
      "LackOfCohesion" : 0.4878483117544628,
      "MetricsIntensity" : 0.03290725359992264,
      "Density" : 2.9766937669376694
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "775c3341-02c7-40f7-9d47-2f3b3010871f",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4881924323133811,
      "MetricsIntensity" : 0.032865192305124816,
      "Density" : 0.994199746238898
    },
    "euclideanDistance" : 22.050405809046016,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978891,
      "LackOfCohesion" : 0.4881924323133811,
      "MetricsIntensity" : 0.032865192305124816,
      "Density" : 2.974511930585683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "8570b63a-d982-4ff7-b88b-2fb453d324cf",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4880871945181528,
      "MetricsIntensity" : 0.03286519230512481,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 22.050435156013165,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477124183006535,
      "LackOfCohesion" : 0.4880871945181528,
      "MetricsIntensity" : 0.03286519230512481,
      "Density" : 2.9755965292841653
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "76120ef5-2a0d-417d-b917-80b7da2841df",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48784854613708045,
      "MetricsIntensity" : 0.03290725359992262,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 22.05049332428468,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47812971342383,
      "LackOfCohesion" : 0.48784854613708045,
      "MetricsIntensity" : 0.03290725359992262,
      "Density" : 2.976151761517616
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "c74fe19f-89a8-4508-9e74-524df0f5773d",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4877867373101115,
      "MetricsIntensity" : 0.03290933209693394,
      "Density" : 0.9954685517491391
    },
    "euclideanDistance" : 22.050530835986784,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411254,
      "LackOfCohesion" : 0.4877867373101115,
      "MetricsIntensity" : 0.032909332096933946,
      "Density" : 2.9783080260303683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.cli.handlers.TopLevelItemOptionHandler'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "3431c406-a795-4f21-b647-494489cc64f2",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4881926766697269,
      "MetricsIntensity" : 0.03286496665309201,
      "Density" : 0.9940184883088635
    },
    "euclideanDistance" : 23.04821112770018,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978885,
      "LackOfCohesion" : 0.4881926766697269,
      "MetricsIntensity" : 0.03286496665309201,
      "Density" : 2.9755832881172006
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "6fd7c244-64a6-4dea-93fa-67b495763320",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4881795512431507,
      "MetricsIntensity" : 0.032864966653091986,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 23.04829396397616,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238311,
      "LackOfCohesion" : 0.4881795512431507,
      "MetricsIntensity" : 0.03286496665309199,
      "Density" : 2.9782962561041773
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='jenkins.security.BasicApiTokenHelper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.IOUtils.SKIP_BUFFER', targetTypeName='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.security.s2m.CallableWhitelistConfig'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "1a00dad6-7c49-4707-bd26-c897dfabfca1",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4876346277573608,
      "MetricsIntensity" : 0.032884998308860096,
      "Density" : 0.9960123255392423
    },
    "euclideanDistance" : 30.037068589689405,
    "generation" : 1,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238305,
      "LackOfCohesion" : 0.4876346277573608,
      "MetricsIntensity" : 0.03288499830886009,
      "Density" : 2.9783197831978314
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "7b4a354f-a7e8-4010-ab6e-b563cc29e024",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48771802996348645,
      "MetricsIntensity" : 0.0328815913021649,
      "Density" : 0.9960123255392423
    },
    "euclideanDistance" : 30.03706994006243,
    "generation" : 1,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238305,
      "LackOfCohesion" : 0.48771802996348645,
      "MetricsIntensity" : 0.0328815913021649,
      "Density" : 2.9783197831978314
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "09bc2bc5-6701-46db-a682-114a6c3f0488",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4873744375030253,
      "MetricsIntensity" : 0.032883763008629066,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 31.035858513717535,
    "generation" : 1,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238303,
      "LackOfCohesion" : 0.4873744375030253,
      "MetricsIntensity" : 0.032883763008629066,
      "Density" : 2.977235772357724
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "4259b420-650c-4695-b859-0ae7c1ae8407",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4864409259576064,
      "MetricsIntensity" : 0.03287689740088144,
      "Density" : 0.9963748413993112
    },
    "euclideanDistance" : 31.03586712893939,
    "generation" : 1,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478129713423831,
      "LackOfCohesion" : 0.4864409259576064,
      "MetricsIntensity" : 0.03287689740088145,
      "Density" : 2.9794037940379403
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate(), jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities2()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "e2cdfa88-4375-4ba8-a566-fc47835c30d0",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4875588708478793,
      "MetricsIntensity" : 0.03287554082510856,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 32.034720144505776,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151838,
      "LackOfCohesion" : 0.4875588708478793,
      "MetricsIntensity" : 0.03287554082510856,
      "Density" : 2.9777657266811284
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "7bf2257f-548a-469a-b028-4b23764e9a40",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48636217339814813,
      "MetricsIntensity" : 0.032884772656827266,
      "Density" : 0.9961935834692768
    },
    "euclideanDistance" : 32.03476181921412,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411258,
      "LackOfCohesion" : 0.48636217339814813,
      "MetricsIntensity" : 0.032884772656827266,
      "Density" : 2.978861788617887
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate(), jenkins.security.LastGrantedAuthoritiesProperty.reconfigure(StaplerRequest, JSONObject)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "884e01a4-b45a-48e0-a1e6-dd2a450a964b",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4872816306312785,
      "MetricsIntensity" : 0.03288477265682726,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 33.033665026437816,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151843,
      "LackOfCohesion" : 0.4872816306312785,
      "MetricsIntensity" : 0.03288477265682725,
      "Density" : 2.9761517615176163
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "f7d7e8f9-c2bd-4afa-846a-756cc57289ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48733473296686036,
      "MetricsIntensity" : 0.03288350622207031,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 33.03368629021022,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324787,
      "LackOfCohesion" : 0.48733473296686036,
      "MetricsIntensity" : 0.03288350622207031,
      "Density" : 2.9761517615176167
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "ff574ae7-ca1e-4e83-971d-7f9a887ba656",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48734260822280634,
      "MetricsIntensity" : 0.032882149646297425,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 33.03368640504175,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324792,
      "LackOfCohesion" : 0.48734260822280634,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 2.976151761517616
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "2c9ec042-1aa3-4a80-8805-556f8306406a",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48743192329331114,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 33.0336877228186,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324792,
      "LackOfCohesion" : 0.48743192329331114,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 2.976151761517616
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "10fe9917-702d-45e3-b72c-c124ed12fa36",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48743192329331114,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 33.0336877228186,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324794,
      "LackOfCohesion" : 0.48743192329331114,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 2.9761517615176163
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "713c9d84-157f-45e7-952d-471d79f1c238",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48742445101098836,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 0.9954685517491391
    },
    "euclideanDistance" : 33.03370332031784,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479135243841126,
      "LackOfCohesion" : 0.48742445101098836,
      "MetricsIntensity" : 0.03288214964629742,
      "Density" : 2.97669376693767
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "361cd8a3-06bb-48b3-b74f-7a0be3fbb64f",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48788516160967166,
      "MetricsIntensity" : 0.0328886309675881,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 34.03264343130743,
    "generation" : 1,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978894,
      "LackOfCohesion" : 0.48788516160967166,
      "MetricsIntensity" : 0.03288863096758811,
      "Density" : 2.9739837398373985
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.util.StreamResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconName(String)', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "cd123752-915a-4adc-840d-61ce471eff1e",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4874347606080024,
      "MetricsIntensity" : 0.03287291781457873,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 34.03267736373601,
    "generation" : 1,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238307,
      "LackOfCohesion" : 0.4874347606080024,
      "MetricsIntensity" : 0.03287291781457873,
      "Density" : 2.9766811279826464
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.triggers.ReverseBuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.Functions.ThreadSorterBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.Functions.ThreadSorterBase'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.xstream.ImmutableListConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidFile'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.model.ManageJenkinsAction'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='jenkins.model.ProjectNamingStrategy.PatternProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.model.Run.KeepLogBuildBadge'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='jenkins.install.InstallUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='jenkins.install.InstallUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='hudson.util.DescribableList.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.UpdateSite.Deprecation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='hudson.cli.CopyJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='jenkins.util.HttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  } ]
}