{
  "executionId" : "c29d338e-86e5-4b27-bea9-a48b04ce731a",
  "computingTime" : 14310,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.011969532100108,
    "meanNumConcerns" : 1.4723061430010076,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "04756315-7fef-4559-8666-660f7005faa5",
    "objectives" : {
      "NumberOfConcerns" : 1.0041039671682626,
      "NumberOfRefactorings" : 6.0,
      "LackOfCohesion" : 0.4873630425208359,
      "MetricsIntensity" : 0.032895120726294046,
      "Density" : 1.0007225433526012
    },
    "euclideanDistance" : 6.184518995834672,
    "generation" : 0,
    "numberOfRefactorings" : 6,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4738955823293172,
      "LackOfCohesion" : 0.4873630425208359,
      "MetricsIntensity" : 0.03289512072629405,
      "Density" : 3.004338394793926,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    } ]
  }, {
    "solutionId" : "c7fc1559-54cf-41f9-bbbd-5b42cf2fa18b",
    "objectives" : {
      "NumberOfConcerns" : 1.005813953488372,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4860508950407979,
      "MetricsIntensity" : 0.03288627067281176,
      "Density" : 0.9981936416184971
    },
    "euclideanDistance" : 9.123890575547707,
    "generation" : 0,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4741854636591485,
      "LackOfCohesion" : 0.4860508950407979,
      "MetricsIntensity" : 0.03288627067281176,
      "Density" : 2.9918787222523004,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6413912e-e623-4b44-b51e-00cdddb78f7a",
    "objectives" : {
      "NumberOfConcerns" : 1.005813953488372,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48658154445146157,
      "MetricsIntensity" : 0.032845921645657396,
      "Density" : 1.001986994219653
    },
    "euclideanDistance" : 10.112046286463821,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4749247743229692,
      "LackOfCohesion" : 0.48658154445146157,
      "MetricsIntensity" : 0.032845921645657396,
      "Density" : 3.004875406283857,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "45e1a298-8c57-4b16-b171-47ccf2d4b1c6",
    "objectives" : {
      "NumberOfConcerns" : 1.0051299589603284,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4863380468222872,
      "MetricsIntensity" : 0.03289733521256238,
      "Density" : 0.9976517341040463
    },
    "euclideanDistance" : 11.10149549148273,
    "generation" : 0,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4739217652958874,
      "LackOfCohesion" : 0.4863380468222872,
      "MetricsIntensity" : 0.03289733521256238,
      "Density" : 2.99349593495935,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "c793f6ca-5aec-4e3e-9ff2-118e58454d59",
    "objectives" : {
      "NumberOfConcerns" : 0.9982900136798906,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4853732691948686,
      "MetricsIntensity" : 0.03288596349858797,
      "Density" : 0.9971098265895953
    },
    "euclideanDistance" : 12.09245548491863,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4697885196374627,
      "LackOfCohesion" : 0.4853732691948686,
      "MetricsIntensity" : 0.03288596349858797,
      "Density" : 3.004899292324443,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    } ]
  }, {
    "solutionId" : "364921b7-7596-4436-b410-7947df74e22c",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48557695419597063,
      "MetricsIntensity" : 0.0329257080577724,
      "Density" : 0.9994580924855492
    },
    "euclideanDistance" : 16.069716411913817,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693467336683417,
      "LackOfCohesion" : 0.48557695419597063,
      "MetricsIntensity" : 0.03292570805777241,
      "Density" : 3.005431830526887,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1680c6cc-dc4a-4446-acc2-2e272eea7eda",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4850380092605743,
      "MetricsIntensity" : 0.03292970155193781,
      "Density" : 1.0003612716763006
    },
    "euclideanDistance" : 17.065849944676835,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.471650777722027,
      "LackOfCohesion" : 0.4850380092605743,
      "MetricsIntensity" : 0.03292970155193781,
      "Density" : 3.001626016260163,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5b49d96a-16aa-453a-921a-72690c70f6c6",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48710754390024086,
      "MetricsIntensity" : 0.032940293950221355,
      "Density" : 0.9971098265895953
    },
    "euclideanDistance" : 18.062080507329615,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4716507777220276,
      "LackOfCohesion" : 0.48710754390024086,
      "MetricsIntensity" : 0.032940293950221355,
      "Density" : 2.991869918699188,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "466d003f-1c50-4562-b9d5-d0ac38475fe8",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4870201972430057,
      "MetricsIntensity" : 0.03291290013897032,
      "Density" : 1.0
    },
    "euclideanDistance" : 18.062237883390946,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4723895582329316,
      "LackOfCohesion" : 0.4870201972430057,
      "MetricsIntensity" : 0.03291290013897032,
      "Density" : 3.0021691973969626,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a2c90694-854b-47a9-9405-7b90c7b4ce5f",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48710045572174204,
      "MetricsIntensity" : 0.03291923242259417,
      "Density" : 1.0
    },
    "euclideanDistance" : 19.058866796482704,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4701155198392768,
      "LackOfCohesion" : 0.48710045572174204,
      "MetricsIntensity" : 0.03291923242259417,
      "Density" : 3.00542888165038,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.SecurityRealm.None'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.install.InstallState.ConfigureInstance'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.JavaVMArguments'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5fcff8a3-b7c8-4f5d-99bf-6d1c8e7acb59",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48629375446822415,
      "MetricsIntensity" : 0.03285339655269464,
      "Density" : 0.9985549132947977
    },
    "euclideanDistance" : 20.055874345758614,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.471859296482412,
      "LackOfCohesion" : 0.48629375446822415,
      "MetricsIntensity" : 0.03285339655269465,
      "Density" : 3.002715915263444,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.SecurityRealm.None'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.install.InstallState.ConfigureInstance'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.JavaVMArguments'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "ce39c77f-28e5-4c09-8c99-4ab03d99165e",
    "objectives" : {
      "NumberOfConcerns" : 1.0037619699042408,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48740610321282646,
      "MetricsIntensity" : 0.032914241455316545,
      "Density" : 0.997471098265896
    },
    "euclideanDistance" : 21.053292729187078,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4726542900150528,
      "LackOfCohesion" : 0.48740610321282646,
      "MetricsIntensity" : 0.032914241455316545,
      "Density" : 2.9929539295392953,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5d2da916-ad9d-4f87-b6c3-281851042acb",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4884350949966532,
      "MetricsIntensity" : 0.032957530275585574,
      "Density" : 0.9992774566473989
    },
    "euclideanDistance" : 22.05088736021486,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4711200401808133,
      "LackOfCohesion" : 0.4884350949966532,
      "MetricsIntensity" : 0.032957530275585574,
      "Density" : 3.003257328990228,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "409c9df6-7f68-4d8d-baa7-5cbafb9dab75",
    "objectives" : {
      "NumberOfConcerns" : 1.0023939808481532,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48737513056965504,
      "MetricsIntensity" : 0.03291844399831746,
      "Density" : 1.0009031791907514
    },
    "euclideanDistance" : 22.050968663730124,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4721245605223507,
      "LackOfCohesion" : 0.48737513056965504,
      "MetricsIntensity" : 0.03291844399831746,
      "Density" : 3.0081433224755703,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.SecurityRealm.None'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.install.InstallState.ConfigureInstance'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.JavaVMArguments'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "84a6c5be-6dda-4dd9-aa7e-c1b78688fe0c",
    "objectives" : {
      "NumberOfConcerns" : 1.0006839945280437,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4866537992782875,
      "MetricsIntensity" : 0.03290440396585506,
      "Density" : 0.9983742774566474
    },
    "euclideanDistance" : 23.048558182128097,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4696132596685083,
      "LackOfCohesion" : 0.4866537992782875,
      "MetricsIntensity" : 0.03290440396585506,
      "Density" : 3.0005428881650387,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "4463240c-0bd0-405b-917c-6fc1e14b155a",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4878675578294915,
      "MetricsIntensity" : 0.03297546065709186,
      "Density" : 1.0
    },
    "euclideanDistance" : 23.048698987831862,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4703815261044175,
      "LackOfCohesion" : 0.4878675578294915,
      "MetricsIntensity" : 0.03297546065709185,
      "Density" : 3.00542888165038,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "9a3a1677-9390-45c9-9223-261f4b5f89de",
    "objectives" : {
      "NumberOfConcerns" : 1.0034199726402189,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4871000607038137,
      "MetricsIntensity" : 0.032907405350792736,
      "Density" : 0.9998193641618497
    },
    "euclideanDistance" : 23.048749201831125,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4721525338685404,
      "LackOfCohesion" : 0.4871000607038137,
      "MetricsIntensity" : 0.032907405350792736,
      "Density" : 3.0,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "e5300956-b865-452e-b70b-84a40faec483",
    "objectives" : {
      "NumberOfConcerns" : 1.0037619699042408,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4869561036433976,
      "MetricsIntensity" : 0.032928684597014535,
      "Density" : 1.0007225433526012
    },
    "euclideanDistance" : 23.04880027780502,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4726542900150525,
      "LackOfCohesion" : 0.4869561036433976,
      "MetricsIntensity" : 0.03292868459701454,
      "Density" : 3.0059685295713514,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "4475c976-bc58-4b81-ab2d-5c3ed5126a7f",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4881125393074317,
      "MetricsIntensity" : 0.03291116616801619,
      "Density" : 0.9998193641618497
    },
    "euclideanDistance" : 26.043140002340838,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.471650777722027,
      "LackOfCohesion" : 0.4881125393074317,
      "MetricsIntensity" : 0.03291116616801619,
      "Density" : 3.0032555615843735,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "7e7e2f4b-6bd7-4b9d-9a30-512685427216",
    "objectives" : {
      "NumberOfConcerns" : 0.9986320109439124,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4879273226839803,
      "MetricsIntensity" : 0.03300652225976872,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 27.04134356759317,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4673366834170856,
      "LackOfCohesion" : 0.4879273226839803,
      "MetricsIntensity" : 0.03300652225976872,
      "Density" : 3.005434782608696,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "a5cb55fa-b072-4862-9451-42bc0cb07758",
    "objectives" : {
      "NumberOfConcerns" : 1.0023939808481532,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4876539838560328,
      "MetricsIntensity" : 0.032931233743943245,
      "Density" : 0.9962066473988439
    },
    "euclideanDistance" : 28.039902144110435,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713855421686743,
      "LackOfCohesion" : 0.4876539838560328,
      "MetricsIntensity" : 0.032931233743943245,
      "Density" : 2.992403689636463,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "9361a92b-d3af-4aea-800d-e9e720737e74",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48851723575120537,
      "MetricsIntensity" : 0.03298318345119721,
      "Density" : 0.9960260115606936
    },
    "euclideanDistance" : 30.03720789008135,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693775100401605,
      "LackOfCohesion" : 0.48851723575120537,
      "MetricsIntensity" : 0.032983183451197204,
      "Density" : 2.9918610960390666,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "14d2f0dc-ea18-4ae8-922f-2ff6a01c239d",
    "objectives" : {
      "NumberOfConcerns" : 0.9996580027359782,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48783789025572594,
      "MetricsIntensity" : 0.032983838479431794,
      "Density" : 0.9954841040462428
    },
    "euclideanDistance" : 31.035936887173435,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4681064791562026,
      "LackOfCohesion" : 0.48783789025572594,
      "MetricsIntensity" : 0.032983838479431794,
      "Density" : 2.9918566775244297,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "5b0b4d78-0969-4661-b95c-66344e582f11",
    "objectives" : {
      "NumberOfConcerns" : 1.000341997264022,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48996094404223406,
      "MetricsIntensity" : 0.0330056634815804,
      "Density" : 0.9958453757225434
    },
    "euclideanDistance" : 33.033824229482526,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4691109994977403,
      "LackOfCohesion" : 0.48996094404223406,
      "MetricsIntensity" : 0.03300566348158039,
      "Density" : 2.9929424538545053,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "982d2eb8-94e1-4eca-b08b-d9d28ec13d83",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4896636823967717,
      "MetricsIntensity" : 0.033011934351720305,
      "Density" : 0.9967485549132948
    },
    "euclideanDistance" : 35.031953854846336,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4711200401808133,
      "LackOfCohesion" : 0.4896636823967717,
      "MetricsIntensity" : 0.03301193435172031,
      "Density" : 2.9956568946796955,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "2bbc6f5f-e7a2-4af6-ada3-86c0dbbd0e19",
    "objectives" : {
      "NumberOfConcerns" : 0.9989740082079344,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48880287576957465,
      "MetricsIntensity" : 0.032974845586244715,
      "Density" : 0.9942196531791907
    },
    "euclideanDistance" : 36.03090947200258,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4671019588146659,
      "LackOfCohesion" : 0.48880287576957465,
      "MetricsIntensity" : 0.03297484558624472,
      "Density" : 2.9913043478260866,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "0288640b-8c60-45ba-9b8f-6839befe36ab",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4899944222510799,
      "MetricsIntensity" : 0.032995345656442576,
      "Density" : 0.9953034682080925
    },
    "euclideanDistance" : 39.028602488694105,
    "generation" : 0,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693467336683415,
      "LackOfCohesion" : 0.4899944222510799,
      "MetricsIntensity" : 0.032995345656442576,
      "Density" : 2.9945652173913038,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.SecurityRealm.None'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.install.InstallState.ConfigureInstance'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.JavaVMArguments'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "6cb2c7e8-db60-4f03-864c-624d56badb4b",
    "objectives" : {
      "NumberOfConcerns" : 1.000341997264022,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4903106176540276,
      "MetricsIntensity" : 0.033009745861604156,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 41.0273081227759,
    "generation" : 0,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4698492462311554,
      "LackOfCohesion" : 0.4903106176540276,
      "MetricsIntensity" : 0.033009745861604156,
      "Density" : 3.0038022813688223,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "92a96a9e-a913-4c99-aed8-2c33d74c47ac",
    "objectives" : {
      "NumberOfConcerns" : 0.996922024623803,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48893498167384036,
      "MetricsIntensity" : 0.0330707499977062,
      "Density" : 0.9945809248554913
    },
    "euclideanDistance" : 44.0252563403108,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4655605832076428,
      "LackOfCohesion" : 0.48893498167384036,
      "MetricsIntensity" : 0.0330707499977062,
      "Density" : 2.9923913043478256,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "4bffffe3-f175-450a-8ed8-b65dcee81d58",
    "objectives" : {
      "NumberOfConcerns" : 0.9976060191518468,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48904046646830374,
      "MetricsIntensity" : 0.033018142440686404,
      "Density" : 0.9971098265895953
    },
    "euclideanDistance" : 44.02533016970234,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4658291457286434,
      "LackOfCohesion" : 0.48904046646830374,
      "MetricsIntensity" : 0.033018142440686404,
      "Density" : 3.001631321370309,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "0977af69-3984-459b-b3d1-aa466ab1db6f",
    "objectives" : {
      "NumberOfConcerns" : 0.9976060191518468,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.489770079460886,
      "MetricsIntensity" : 0.033039470819903584,
      "Density" : 0.9972904624277457
    },
    "euclideanDistance" : 44.02534238791635,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.466566113624937,
      "LackOfCohesion" : 0.489770079460886,
      "MetricsIntensity" : 0.033039470819903584,
      "Density" : 3.0005434782608718,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.values(), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "b803c4c1-0b8c-4108-98ce-471926dac81f",
    "objectives" : {
      "NumberOfConcerns" : 0.9976060191518468,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.4887833755180079,
      "MetricsIntensity" : 0.03303841606996541,
      "Density" : 0.994400289017341
    },
    "euclideanDistance" : 46.024168112301226,
    "generation" : 0,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.466566113624938,
      "LackOfCohesion" : 0.4887833755180079,
      "MetricsIntensity" : 0.03303841606996541,
      "Density" : 2.991847826086957,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.TimeZoneProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.RestartRequiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.util.XStream2.AssociatedConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "a53fd235-454d-46a0-bbe5-455f5d96c0ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9941860465116279,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4894080446692662,
      "MetricsIntensity" : 0.033136803442769557,
      "Density" : 0.9954841040462428
    },
    "euclideanDistance" : 49.022647957637055,
    "generation" : 0,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4630095621540016,
      "LackOfCohesion" : 0.4894080446692662,
      "MetricsIntensity" : 0.033136803442769557,
      "Density" : 3.0,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='jenkins.model.item_category.Category'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.model.GlobalNodePropertiesConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.slaves.OfflineCause.LaunchFailed'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.model.Cause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.labels.LabelAtom.LabelAtomConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.UserNameResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.cli.BuildCommand.CLICause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.LargeText.FileSession'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.LargeText.FileSession'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.FilePath.UnzipFrom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.RenameAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.TransientComputerActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Cause.UpstreamCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.PaneStatusProperties.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.UpdateCenter.CompleteBatchJob.CompleteBatchJobStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.jna.Advapi32.SERVICE_STATUS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    } ]
  }, {
    "solutionId" : "ebc4647b-7ada-461b-a6fe-ff0bc9a4f1d5",
    "objectives" : {
      "NumberOfConcerns" : 0.9955540355677155,
      "NumberOfRefactorings" : 59.0,
      "LackOfCohesion" : 0.48943674121013875,
      "MetricsIntensity" : 0.0330530956403501,
      "Density" : 0.9954841040462428
    },
    "euclideanDistance" : 59.018833919943916,
    "generation" : 0,
    "numberOfRefactorings" : 59,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4657603222557911,
      "LackOfCohesion" : 0.48943674121013875,
      "MetricsIntensity" : 0.0330530956403501,
      "Density" : 2.998367791077259,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.model.UpdateCenter.DownloadJob.InstallationStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='org.jenkins.ui.icon.WeatherIcon'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.AccountExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.AccountExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.model.FreeStyleBuild'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.model.TextParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ProcessTree.Windows'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ProcessTree.Windows'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ProcessTree.Windows'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ProcessTree.Windows'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ProcessTree.Windows'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ProcessTree.Windows'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.PluginManager.PluginDeprecationMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.TransientViewActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.seed.UserSeedSecurityListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.seed.UserSeedSecurityListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.tools.ToolInstallation.ToolConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.ProcessKillingVeto'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.util.KeyedDataStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.scheduler.BaseParser'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.views.StatusColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='hudson.model.StringParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.model.StringParameterDefinition'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='hudson.model.StringParameterDefinition'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.AbstractProject.LabelValidator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.JNADoublyLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.diagnosis.OldDataMonitor.ManagementLinkImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='jenkins.tools.ToolConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.tools.DownloadFromUrlInstaller.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.ShiftedCategoryAxis'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.slaves.NodeProvisioner.NodeProvisionerInvoker'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.slaves.NodeProvisioner.NodeProvisionerInvoker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstallation.GetMavenVersion'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstallation.GetMavenVersion'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.tools.ZipExtractionInstaller.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.tools.ZipExtractionInstaller.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.tools.ZipExtractionInstaller.DescriptorImpl'"
      } ]
    } ]
  } ]
}