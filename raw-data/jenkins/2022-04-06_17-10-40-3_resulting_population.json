{
  "executionId" : "14599235-16a1-4ae5-9662-9d29df66a2be",
  "computingTime" : 723679,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0510037981551816,
    "meanNumConcerns" : 1.5412890231621348,
    "meanMetricsIntensity" : 0.03296937024300846,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "520b6662-61d4-47d4-b6d6-d5f418f24e6c",
    "objectives" : {
      "NumberOfConcerns" : 1.0026135249918326,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4886252532518414,
      "MetricsIntensity" : 0.03277292226622742,
      "Density" : 1.0030232971723279
    },
    "euclideanDistance" : 10.11192950517933,
    "generation" : 11,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5391173520561683,
      "LackOfCohesion" : 0.4886252532518414,
      "MetricsIntensity" : 0.03277292226622742,
      "Density" : 3.047001620745543
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "d9df73e6-eff8-4110-88c5-6a4fae9f572f",
    "objectives" : {
      "NumberOfConcerns" : 1.0042469781117283,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48968798393842006,
      "MetricsIntensity" : 0.03274018880602842,
      "Density" : 1.0019562511115063
    },
    "euclideanDistance" : 10.112037112459818,
    "generation" : 46,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5400801603206409,
      "LackOfCohesion" : 0.48968798393842006,
      "MetricsIntensity" : 0.03274018880602843,
      "Density" : 3.042116630669546
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "ac995ae1-fbc6-4606-9eb0-51f81aa72740",
    "objectives" : {
      "NumberOfConcerns" : 1.0045736687357072,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4902325565175886,
      "MetricsIntensity" : 0.03274623285888872,
      "Density" : 1.0017784101013694
    },
    "euclideanDistance" : 10.112078347901512,
    "generation" : 36,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5405811623246493,
      "LackOfCohesion" : 0.4902325565175886,
      "MetricsIntensity" : 0.032746232858888724,
      "Density" : 3.041576673866091
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "e295d1e6-c3f4-4631-9db4-daf5853199e2",
    "objectives" : {
      "NumberOfConcerns" : 1.0042469781117283,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48877273590620346,
      "MetricsIntensity" : 0.03274314732756694,
      "Density" : 1.002845456162191
    },
    "euclideanDistance" : 10.112080987761809,
    "generation" : 45,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5400801603206409,
      "LackOfCohesion" : 0.48877273590620346,
      "MetricsIntensity" : 0.03274314732756694,
      "Density" : 3.04317323259579
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "03e3d04a-146d-42dd-b6ee-a8da01ad01bb",
    "objectives" : {
      "NumberOfConcerns" : 1.0049003593596864,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4901212013403356,
      "MetricsIntensity" : 0.03273769668781417,
      "Density" : 1.0016005690912324
    },
    "euclideanDistance" : 10.112087765690763,
    "generation" : 37,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5410821643286576,
      "LackOfCohesion" : 0.4901212013403356,
      "MetricsIntensity" : 0.03273769668781418,
      "Density" : 3.0410367170626347
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "c4ebd130-dae3-4ea0-bb7f-c6ec83dd6c2a",
    "objectives" : {
      "NumberOfConcerns" : 1.0045736687357072,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48822663791364707,
      "MetricsIntensity" : 0.03274245613962569,
      "Density" : 1.0032011381824648
    },
    "euclideanDistance" : 10.112122334009326,
    "generation" : 44,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5405811623246493,
      "LackOfCohesion" : 0.48822663791364707,
      "MetricsIntensity" : 0.03274245613962569,
      "Density" : 3.044252563410685
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "a335bb15-d120-436f-87aa-a7d8683a08fa",
    "objectives" : {
      "NumberOfConcerns" : 1.00359359686377,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4897720982826888,
      "MetricsIntensity" : 0.032762229111125744,
      "Density" : 1.0016005690912324
    },
    "euclideanDistance" : 11.101862631089542,
    "generation" : 40,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5406218655967903,
      "LackOfCohesion" : 0.4897720982826888,
      "MetricsIntensity" : 0.03276222911112575,
      "Density" : 3.0426796326310104
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "48445257-eb1e-4bab-ac3c-8b607446e1f5",
    "objectives" : {
      "NumberOfConcerns" : 1.00359359686377,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48977209828268864,
      "MetricsIntensity" : 0.032762229111125765,
      "Density" : 1.0016005690912324
    },
    "euclideanDistance" : 11.101862631089542,
    "generation" : 46,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5406218655967903,
      "LackOfCohesion" : 0.48977209828268864,
      "MetricsIntensity" : 0.032762229111125765,
      "Density" : 3.0426796326310113
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "3360f811-5030-4498-ac39-9e3f4b649ba8",
    "objectives" : {
      "NumberOfConcerns" : 1.003920287487749,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.49093079174400267,
      "MetricsIntensity" : 0.03275584920273615,
      "Density" : 1.0007113640405478
    },
    "euclideanDistance" : 11.101863139387405,
    "generation" : 41,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.540350877192983,
      "LackOfCohesion" : 0.49093079174400267,
      "MetricsIntensity" : 0.03275584920273615,
      "Density" : 3.039978390059427
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "6d7ee000-69a3-46f3-9502-132ab5dd577e",
    "objectives" : {
      "NumberOfConcerns" : 1.0042469781117283,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4903843936976048,
      "MetricsIntensity" : 0.03275515763502129,
      "Density" : 1.0010670460608215
    },
    "euclideanDistance" : 11.1019006020451,
    "generation" : 40,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5408521303258145,
      "LackOfCohesion" : 0.4903843936976048,
      "MetricsIntensity" : 0.0327551576350213,
      "Density" : 3.0410588870880604
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "b530599a-30b6-4c8f-a541-1342ef0483f6",
    "objectives" : {
      "NumberOfConcerns" : 1.0009800718719373,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48706380942526445,
      "MetricsIntensity" : 0.03279385204924788,
      "Density" : 1.0024897741419172
    },
    "euclideanDistance" : 13.086070970414609,
    "generation" : 41,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5381526104417675,
      "LackOfCohesion" : 0.48706380942526445,
      "MetricsIntensity" : 0.03279385204924788,
      "Density" : 3.048674959437534
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "d4732cef-8cc7-48e4-b9f1-236d3f6fc7d4",
    "objectives" : {
      "NumberOfConcerns" : 1.0016334531198954,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48640490891771243,
      "MetricsIntensity" : 0.03278460437683852,
      "Density" : 1.0026676151520542
    },
    "euclideanDistance" : 13.08611005939454,
    "generation" : 46,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5391566265060241,
      "LackOfCohesion" : 0.48640490891771243,
      "MetricsIntensity" : 0.03278460437683852,
      "Density" : 3.049215792320173
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "4f510e0a-86fb-4522-ad43-e7e0de93fcf3",
    "objectives" : {
      "NumberOfConcerns" : 1.0026135249918326,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48911732743053854,
      "MetricsIntensity" : 0.03275834269024613,
      "Density" : 1.0012448870709585
    },
    "euclideanDistance" : 13.08617721389218,
    "generation" : 46,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5383458646616543,
      "LackOfCohesion" : 0.48911732743053854,
      "MetricsIntensity" : 0.03275834269024613,
      "Density" : 3.041599135602378
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "ab06421c-16b0-41dd-955e-fb111f5ceb17",
    "objectives" : {
      "NumberOfConcerns" : 1.003266906239791,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48845951302272395,
      "MetricsIntensity" : 0.03274911026125284,
      "Density" : 1.0014227280810954
    },
    "euclideanDistance" : 13.086216304400542,
    "generation" : 45,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5393483709273186,
      "LackOfCohesion" : 0.48845951302272395,
      "MetricsIntensity" : 0.03274911026125284,
      "Density" : 3.042139384116693
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "12adeff7-8dda-440e-a106-20311b2cb1e6",
    "objectives" : {
      "NumberOfConcerns" : 1.0029402156158118,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.49052898052625593,
      "MetricsIntensity" : 0.03276547611980386,
      "Density" : 1.000177841010137
    },
    "euclideanDistance" : 14.080054582525904,
    "generation" : 36,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.539618856569709,
      "LackOfCohesion" : 0.49052898052625593,
      "MetricsIntensity" : 0.032765476119803856,
      "Density" : 3.0400000000000005
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "eabf2ce6-0e12-4fc7-802c-711714c0451d",
    "objectives" : {
      "NumberOfConcerns" : 1.0026135249918326,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4863109381691263,
      "MetricsIntensity" : 0.03278830774190598,
      "Density" : 1.0074693224257514
    },
    "euclideanDistance" : 15.075072196106825,
    "generation" : 44,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5391173520561683,
      "LackOfCohesion" : 0.4863109381691263,
      "MetricsIntensity" : 0.03278830774190598,
      "Density" : 3.060507833603457
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "2b034d14-0f24-4723-b7a0-b7d90d13ff0e",
    "objectives" : {
      "NumberOfConcerns" : 1.0029402156158118,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48619946055627405,
      "MetricsIntensity" : 0.03277976218526673,
      "Density" : 1.0072914814156144
    },
    "euclideanDistance" : 15.07507842874743,
    "generation" : 44,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5396188565697086,
      "LackOfCohesion" : 0.48619946055627405,
      "MetricsIntensity" : 0.03277976218526673,
      "Density" : 3.0599675850891415
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "a9c20c8d-273b-4cee-b6c2-71e1dacb4ab1",
    "objectives" : {
      "NumberOfConcerns" : 1.003266906239791,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4873089968722078,
      "MetricsIntensity" : 0.03276331547672121,
      "Density" : 1.0065801173750666
    },
    "euclideanDistance" : 15.07508844123723,
    "generation" : 45,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5393483709273186,
      "LackOfCohesion" : 0.4873089968722078,
      "MetricsIntensity" : 0.03276331547672121,
      "Density" : 3.056155507559395
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "5657b320-f277-4f1b-9c4b-657ca3919389",
    "objectives" : {
      "NumberOfConcerns" : 1.0029402156158118,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48858036439357544,
      "MetricsIntensity" : 0.03275926502470033,
      "Density" : 0.9985772719189046
    },
    "euclideanDistance" : 16.069935581265046,
    "generation" : 47,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5388471177944865,
      "LackOfCohesion" : 0.48858036439357544,
      "MetricsIntensity" : 0.03275926502470033,
      "Density" : 3.031857451403888
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "05b5bac0-8cd5-446c-8ee4-c875fe0b03b5",
    "objectives" : {
      "NumberOfConcerns" : 1.0022868343678537,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4895834338000607,
      "MetricsIntensity" : 0.03275762251107065,
      "Density" : 0.999822158989863
    },
    "euclideanDistance" : 16.070002745750802,
    "generation" : 47,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.538615847542628,
      "LackOfCohesion" : 0.4895834338000607,
      "MetricsIntensity" : 0.03275762251107065,
      "Density" : 3.038918918918919
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "d61303db-c211-4cf9-b2d7-d0348128112f",
    "objectives" : {
      "NumberOfConcerns" : 1.0026135249918326,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.485995279511955,
      "MetricsIntensity" : 0.03281310057566834,
      "Density" : 1.0078250044460253
    },
    "euclideanDistance" : 16.07041422090173,
    "generation" : 46,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5398896136477673,
      "LackOfCohesion" : 0.485995279511955,
      "MetricsIntensity" : 0.03281310057566833,
      "Density" : 3.0632432432432437
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "57f0d93c-a29b-44ec-a2ea-b564594399b7",
    "objectives" : {
      "NumberOfConcerns" : 1.0003266906239792,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48647523240575735,
      "MetricsIntensity" : 0.032802787011196634,
      "Density" : 1.005868753334519
    },
    "euclideanDistance" : 18.062396286525477,
    "generation" : 44,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5371485943775103,
      "LackOfCohesion" : 0.48647523240575735,
      "MetricsIntensity" : 0.03280278701119663,
      "Density" : 3.0589507842076795
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "86212a47-530e-4ec3-8b4d-43a24d0fb11f",
    "objectives" : {
      "NumberOfConcerns" : 1.000653381247958,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4872703106779257,
      "MetricsIntensity" : 0.032784884187256086,
      "Density" : 0.9978659078783567
    },
    "euclideanDistance" : 19.058739485176037,
    "generation" : 48,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5368790767686906,
      "LackOfCohesion" : 0.4872703106779257,
      "MetricsIntensity" : 0.03278488418725609,
      "Density" : 3.034613304488912
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "6d5f39ce-7cc4-4b2a-b044-98a0d655dcc4",
    "objectives" : {
      "NumberOfConcerns" : 1.0016334531198954,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4896402138046141,
      "MetricsIntensity" : 0.032766625275314994,
      "Density" : 0.9967988618175351
    },
    "euclideanDistance" : 19.05879583646449,
    "generation" : 47,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.537612838515547,
      "LackOfCohesion" : 0.4896402138046141,
      "MetricsIntensity" : 0.032766625275315,
      "Density" : 3.029729729729729
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "7dcaa9c4-e343-4de0-88a0-07adececde88",
    "objectives" : {
      "NumberOfConcerns" : 1.000653381247958,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4855711709446931,
      "MetricsIntensity" : 0.032840315851727774,
      "Density" : 1.0064022763649298
    },
    "euclideanDistance" : 20.056196313849576,
    "generation" : 47,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5384229030637875,
      "LackOfCohesion" : 0.4855711709446931,
      "MetricsIntensity" : 0.032840315851727774,
      "Density" : 3.0622294372294374
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "f0d47e71-d5ba-4cfd-a5be-9d592d362d8a",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4869833404537665,
      "MetricsIntensity" : 0.03280719637386947,
      "Density" : 1.0017784101013694
    },
    "euclideanDistance" : 21.053308268986104,
    "generation" : 47,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.536646586345382,
      "LackOfCohesion" : 0.4869833404537665,
      "MetricsIntensity" : 0.032807196373869474,
      "Density" : 3.0465116279069764
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "fb618698-aebb-4a38-a449-684747435508",
    "objectives" : {
      "NumberOfConcerns" : 1.0026135249918326,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4916466037098148,
      "MetricsIntensity" : 0.03276384094827414,
      "Density" : 0.996976702827672
    },
    "euclideanDistance" : 22.05089536229064,
    "generation" : 30,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5383458646616543,
      "LackOfCohesion" : 0.4916466037098148,
      "MetricsIntensity" : 0.03276384094827414,
      "Density" : 3.031909140075717
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "62de7a87-3ba7-4c42-9b30-c2601ab97f59",
    "objectives" : {
      "NumberOfConcerns" : 0.9993466187520418,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4882388793946549,
      "MetricsIntensity" : 0.03279557674476421,
      "Density" : 0.9960874977769874
    },
    "euclideanDistance" : 23.048434582870165,
    "generation" : 44,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.535642570281125,
      "LackOfCohesion" : 0.4882388793946549,
      "MetricsIntensity" : 0.032795576744764215,
      "Density" : 3.0308441558441563
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "28d915f0-3ed7-4469-bd52-c7f7bf1b220a",
    "objectives" : {
      "NumberOfConcerns" : 1.0019601437438745,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4919107793517051,
      "MetricsIntensity" : 0.032781325867558046,
      "Density" : 0.9964431797972613
    },
    "euclideanDistance" : 23.04864147776141,
    "generation" : 38,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5381143430290873,
      "LackOfCohesion" : 0.4919107793517051,
      "MetricsIntensity" : 0.03278132586755804,
      "Density" : 3.031926406926407
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "c65bad23-5233-42ab-ba20-6e21aa86fc2b",
    "objectives" : {
      "NumberOfConcerns" : 1.000653381247958,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48573065274387817,
      "MetricsIntensity" : 0.0327908996541789,
      "Density" : 1.005690912324382
    },
    "euclideanDistance" : 24.046823717710616,
    "generation" : 48,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5368790767686902,
      "LackOfCohesion" : 0.48573065274387817,
      "MetricsIntensity" : 0.0327908996541789,
      "Density" : 3.0567567567567577
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "9251dc52-9645-44fe-9243-e06bf1eaa7a7",
    "objectives" : {
      "NumberOfConcerns" : 1.0009800718719373,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4910767102383619,
      "MetricsIntensity" : 0.03278201781546407,
      "Density" : 0.9962653387871243
    },
    "euclideanDistance" : 25.044694782040846,
    "generation" : 37,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5366098294884651,
      "LackOfCohesion" : 0.4910767102383619,
      "MetricsIntensity" : 0.03278201781546406,
      "Density" : 3.0313852813852806
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "5d267144-ac9a-4229-9719-a0c05fb18ab9",
    "objectives" : {
      "NumberOfConcerns" : 1.0013067624959164,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4909652326255098,
      "MetricsIntensity" : 0.03277347225882487,
      "Density" : 0.9960874977769874
    },
    "euclideanDistance" : 25.044698570675166,
    "generation" : 49,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.537111334002006,
      "LackOfCohesion" : 0.4909652326255098,
      "MetricsIntensity" : 0.03277347225882486,
      "Density" : 3.030844155844156
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "c9f23ff5-a50e-43f2-bec3-0bab2e885681",
    "objectives" : {
      "NumberOfConcerns" : 0.9993466187520418,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4849677904087397,
      "MetricsIntensity" : 0.032826751124566615,
      "Density" : 1.005868753334519
    },
    "euclideanDistance" : 26.043170639664236,
    "generation" : 44,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5364138623807135,
      "LackOfCohesion" : 0.4849677904087397,
      "MetricsIntensity" : 0.032826751124566615,
      "Density" : 3.06060606060606
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "b102c578-073e-4f05-92ce-4b88461508e7",
    "objectives" : {
      "NumberOfConcerns" : 0.9993466187520418,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4888413245554381,
      "MetricsIntensity" : 0.03279648308908893,
      "Density" : 0.9957318157567135
    },
    "euclideanDistance" : 27.041268775026396,
    "generation" : 49,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5356425702811247,
      "LackOfCohesion" : 0.4888413245554381,
      "MetricsIntensity" : 0.03279648308908893,
      "Density" : 3.0281233098972415
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "d3f77426-cd0c-4229-96f0-186cffee20a3",
    "objectives" : {
      "NumberOfConcerns" : 0.9990199281280627,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4859414733823341,
      "MetricsIntensity" : 0.03281317442879663,
      "Density" : 0.9980437488884937
    },
    "euclideanDistance" : 27.04128968746612,
    "generation" : 44,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5351405622489949,
      "LackOfCohesion" : 0.4859414733823341,
      "MetricsIntensity" : 0.03281317442879664,
      "Density" : 3.035154137371552
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "bd3a03d4-50bd-4f37-874d-dad5dc19cd73",
    "objectives" : {
      "NumberOfConcerns" : 0.999673309376021,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4845391466818658,
      "MetricsIntensity" : 0.03284303850750033,
      "Density" : 1.006046594344656
    },
    "euclideanDistance" : 27.041585259102636,
    "generation" : 44,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5376884422110548,
      "LackOfCohesion" : 0.4845391466818658,
      "MetricsIntensity" : 0.03284303850750034,
      "Density" : 3.0628045479155386
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "18cb91b6-01e5-4f85-8255-7c319ae10f6d",
    "objectives" : {
      "NumberOfConcerns" : 0.9980398562561255,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48595736556109237,
      "MetricsIntensity" : 0.03283419763838558,
      "Density" : 0.994309087675618
    },
    "euclideanDistance" : 28.03964990441549,
    "generation" : 47,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5351758793969843,
      "LackOfCohesion" : 0.48595736556109237,
      "MetricsIntensity" : 0.03283419763838559,
      "Density" : 3.0270709258256647
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "de60dd41-6129-4c34-b759-877ae12c9fc3",
    "objectives" : {
      "NumberOfConcerns" : 0.9993466187520418,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4850776620673735,
      "MetricsIntensity" : 0.03283730874780713,
      "Density" : 0.9955539747465766
    },
    "euclideanDistance" : 28.039725391096955,
    "generation" : 44,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5364138623807135,
      "LackOfCohesion" : 0.4850776620673735,
      "MetricsIntensity" : 0.03283730874780714,
      "Density" : 3.029220779220779
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "4d653cef-1b1a-468c-bb30-686d2737dfb4",
    "objectives" : {
      "NumberOfConcerns" : 1.000653381247958,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.49102201263006356,
      "MetricsIntensity" : 0.03278247374083688,
      "Density" : 0.9930642006046594
    },
    "euclideanDistance" : 28.039787106955668,
    "generation" : 38,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5361083249749243,
      "LackOfCohesion" : 0.49102201263006356,
      "MetricsIntensity" : 0.03278247374083688,
      "Density" : 3.021645021645022
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "907191bf-e900-4a53-86c0-880a6a67832b",
    "objectives" : {
      "NumberOfConcerns" : 1.0003266906239792,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.49056321933387076,
      "MetricsIntensity" : 0.03278311416487667,
      "Density" : 0.9955539747465766
    },
    "euclideanDistance" : 28.039855709495832,
    "generation" : 48,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5363773206221774,
      "LackOfCohesion" : 0.49056321933387076,
      "MetricsIntensity" : 0.03278311416487668,
      "Density" : 3.030860855441256
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "9f57d1a4-5ed0-418b-9566-ed58a94a38be",
    "objectives" : {
      "NumberOfConcerns" : 0.9990199281280627,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4896920455565277,
      "MetricsIntensity" : 0.03280889816880881,
      "Density" : 0.9937755646452072
    },
    "euclideanDistance" : 29.038362650345203,
    "generation" : 35,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5351405622489958,
      "LackOfCohesion" : 0.4896920455565277,
      "MetricsIntensity" : 0.03280889816880881,
      "Density" : 3.025446670276123
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "fce937f0-d7ac-4bfc-926b-4425175f78b1",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.491285990023638,
      "MetricsIntensity" : 0.03279997852684897,
      "Density" : 0.9925306775742486
    },
    "euclideanDistance" : 29.03838072118538,
    "generation" : 21,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5358755644756648,
      "LackOfCohesion" : 0.491285990023638,
      "MetricsIntensity" : 0.032799978526848975,
      "Density" : 3.0216567406605304
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "e29b9d1c-87a9-44af-8dc6-f87324773629",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4847140882804308,
      "MetricsIntensity" : 0.032806527923163555,
      "Density" : 1.0051573892939711
    },
    "euclideanDistance" : 29.03870460941576,
    "generation" : 45,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5366465863453815,
      "LackOfCohesion" : 0.4847140882804308,
      "MetricsIntensity" : 0.032806527923163555,
      "Density" : 3.056787452677123
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "c7f65cc2-54a3-445e-a6d4-f1db863b1503",
    "objectives" : {
      "NumberOfConcerns" : 0.999673309376021,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48429477816224265,
      "MetricsIntensity" : 0.032847885494057004,
      "Density" : 1.0065801173750666
    },
    "euclideanDistance" : 30.037446141007234,
    "generation" : 43,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5369161225514816,
      "LackOfCohesion" : 0.48429477816224265,
      "MetricsIntensity" : 0.032847885494057004,
      "Density" : 3.0627705627705626
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "9712929a-62dc-4182-a652-6b28efe17f93",
    "objectives" : {
      "NumberOfConcerns" : 0.9983665468801045,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4881477968927108,
      "MetricsIntensity" : 0.03281233792868572,
      "Density" : 0.994131246665481
    },
    "euclideanDistance" : 31.035856643866904,
    "generation" : 47,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.534907081868408,
      "LackOfCohesion" : 0.4881477968927108,
      "MetricsIntensity" : 0.03281233792868572,
      "Density" : 3.0281690140845083
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "5abdfbc9-765b-4451-ab2b-2e2b8634eae9",
    "objectives" : {
      "NumberOfConcerns" : 0.9977131656321464,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4890084725606552,
      "MetricsIntensity" : 0.03281857020135961,
      "Density" : 0.9928863595945225
    },
    "euclideanDistance" : 32.03469152697947,
    "generation" : 39,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5339025615268709,
      "LackOfCohesion" : 0.4890084725606552,
      "MetricsIntensity" : 0.032818570201359615,
      "Density" : 3.0243770314192853
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "022164ff-9992-4087-bbc9-52a062083922",
    "objectives" : {
      "NumberOfConcerns" : 0.9986932375040837,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48990246072251786,
      "MetricsIntensity" : 0.032811442654937205,
      "Density" : 0.9927085185843856
    },
    "euclideanDistance" : 32.03473020640719,
    "generation" : 46,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5346385542168675,
      "LackOfCohesion" : 0.48990246072251786,
      "MetricsIntensity" : 0.032811442654937205,
      "Density" : 3.0238353196099683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "ba9b7c32-9d52-4ccd-92bc-4d0242b62ff6",
    "objectives" : {
      "NumberOfConcerns" : 0.9990199281280627,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4908839320121895,
      "MetricsIntensity" : 0.03280964032732795,
      "Density" : 0.9919971545438379
    },
    "euclideanDistance" : 32.03473337923427,
    "generation" : 38,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.535140562248995,
      "LackOfCohesion" : 0.4908839320121895,
      "MetricsIntensity" : 0.03280964032732796,
      "Density" : 3.021668472372698
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "5ebf5da0-5970-4524-9394-2204c0466721",
    "objectives" : {
      "NumberOfConcerns" : 0.9977131656321464,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48390891590397417,
      "MetricsIntensity" : 0.03286177397544289,
      "Density" : 1.005335230304108
    },
    "euclideanDistance" : 33.033942819791385,
    "generation" : 43,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5354449472096527,
      "LackOfCohesion" : 0.48390891590397417,
      "MetricsIntensity" : 0.03286177397544288,
      "Density" : 3.062296858071506
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "ef930b38-b0e9-4167-b684-fc9a662b52d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9983665468801045,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4836078548410867,
      "MetricsIntensity" : 0.03285758433617132,
      "Density" : 1.005690912324382
    },
    "euclideanDistance" : 33.03396897363642,
    "generation" : 42,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5356783919597992,
      "LackOfCohesion" : 0.4836078548410867,
      "MetricsIntensity" : 0.03285758433617132,
      "Density" : 3.0617217108825123
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "bb873816-8ca4-4108-9101-6c719f0110e3",
    "objectives" : {
      "NumberOfConcerns" : 0.9983665468801045,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48785111150516647,
      "MetricsIntensity" : 0.032824183082808454,
      "Density" : 1.0039125022230126
    },
    "euclideanDistance" : 33.03397723871652,
    "generation" : 39,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.534907081868408,
      "LackOfCohesion" : 0.48785111150516647,
      "MetricsIntensity" : 0.03282418308280845,
      "Density" : 3.0579631635969666
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "25ecd8dc-567e-4686-981c-9e909f15ce60",
    "objectives" : {
      "NumberOfConcerns" : 0.9983665468801045,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48993734450808973,
      "MetricsIntensity" : 0.03280177807400613,
      "Density" : 0.9916414725235639
    },
    "euclideanDistance" : 34.03264907599975,
    "generation" : 45,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5341365461847392,
      "LackOfCohesion" : 0.48993734450808973,
      "MetricsIntensity" : 0.03280177807400613,
      "Density" : 3.0205850487540618
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "0fdab402-5a32-4c3a-9ef4-bdb853fb500c",
    "objectives" : {
      "NumberOfConcerns" : 0.9970597843841882,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48416969792537146,
      "MetricsIntensity" : 0.03287937077698982,
      "Density" : 1.0048017072736972
    },
    "euclideanDistance" : 34.03291430415545,
    "generation" : 43,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5352112676056344,
      "LackOfCohesion" : 0.48416969792537146,
      "MetricsIntensity" : 0.032879370776989825,
      "Density" : 3.0623306233062326
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "5c190352-9a5e-49ee-ada4-448590c8909c",
    "objectives" : {
      "NumberOfConcerns" : 0.9986932375040837,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48606101758224224,
      "MetricsIntensity" : 0.03282450182050702,
      "Density" : 1.0037346612128757
    },
    "euclideanDistance" : 34.03295761777822,
    "generation" : 46,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5354093420391766,
      "LackOfCohesion" : 0.48606101758224224,
      "MetricsIntensity" : 0.03282450182050702,
      "Density" : 3.0541125541125536
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "46e5a425-9c53-4667-baad-5a61d070c10c",
    "objectives" : {
      "NumberOfConcerns" : 0.9980398562561255,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48408464792277783,
      "MetricsIntensity" : 0.03282521243411367,
      "Density" : 1.0044460252534235
    },
    "euclideanDistance" : 35.03199124818983,
    "generation" : 42,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5344048216976396,
      "LackOfCohesion" : 0.48408464792277783,
      "MetricsIntensity" : 0.03282521243411367,
      "Density" : 3.056277056277056
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "a4dd731d-0925-4786-8e3e-b4e44519e481",
    "objectives" : {
      "NumberOfConcerns" : 0.9970597843841882,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4892727209094551,
      "MetricsIntensity" : 0.0328513087666639,
      "Density" : 0.9919971545438379
    },
    "euclideanDistance" : 36.030801456145454,
    "generation" : 45,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5344394167923576,
      "LackOfCohesion" : 0.4892727209094551,
      "MetricsIntensity" : 0.0328513087666639,
      "Density" : 3.0249457700650764
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "95ecd740-4930-42a9-a9f1-6cbbea3ef5eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9977131656321464,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48658491986360647,
      "MetricsIntensity" : 0.032847786611782746,
      "Density" : 0.9932420416147963
    },
    "euclideanDistance" : 36.03081743695847,
    "generation" : 46,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.534673366834171,
      "LackOfCohesion" : 0.48658491986360647,
      "MetricsIntensity" : 0.032847786611782746,
      "Density" : 3.0238224147265833
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "8ab0ae81-fb51-435e-aaf5-a74580f0bf65",
    "objectives" : {
      "NumberOfConcerns" : 0.9980398562561255,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48376724090956374,
      "MetricsIntensity" : 0.032850060155639516,
      "Density" : 1.0048017072736972
    },
    "euclideanDistance" : 36.031109057250035,
    "generation" : 43,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5351758793969852,
      "LackOfCohesion" : 0.48376724090956374,
      "MetricsIntensity" : 0.032850060155639516,
      "Density" : 3.0590146182999454
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "7841ad1d-bb14-4734-a655-41c0a4123677",
    "objectives" : {
      "NumberOfConcerns" : 0.99640640313623,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48949149733862896,
      "MetricsIntensity" : 0.03284960040881748,
      "Density" : 0.9921749955539747
    },
    "euclideanDistance" : 37.0299597348448,
    "generation" : 49,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326633165829147,
      "LackOfCohesion" : 0.48949149733862896,
      "MetricsIntensity" : 0.03284960040881748,
      "Density" : 3.023848238482384
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "1b86d9dd-463c-4672-8d63-20c14e5848fd",
    "objectives" : {
      "NumberOfConcerns" : 0.9970597843841882,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48738134693980123,
      "MetricsIntensity" : 0.032861550246580794,
      "Density" : 1.0035568202027387
    },
    "euclideanDistance" : 37.03025620980553,
    "generation" : 46,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5344394167923578,
      "LackOfCohesion" : 0.48738134693980123,
      "MetricsIntensity" : 0.032861550246580794,
      "Density" : 3.060195227765728
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "2d77fe1c-5b6e-4f64-bfbc-c37b84e072ba",
    "objectives" : {
      "NumberOfConcerns" : 0.99640640313623,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.48917689597172287,
      "MetricsIntensity" : 0.032874475272403045,
      "Density" : 0.9925306775742486
    },
    "euclideanDistance" : 38.029177188480084,
    "generation" : 44,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5334338863750627,
      "LackOfCohesion" : 0.48917689597172287,
      "MetricsIntensity" : 0.032874475272403045,
      "Density" : 3.0265726681127987
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "a6590462-5ab0-4871-bf3b-5af8f93249ce",
    "objectives" : {
      "NumberOfConcerns" : 0.99640640313623,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.489425336699738,
      "MetricsIntensity" : 0.03284603677659369,
      "Density" : 0.991463631513427
    },
    "euclideanDistance" : 39.02840557690207,
    "generation" : 44,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.533433886375062,
      "LackOfCohesion" : 0.489425336699738,
      "MetricsIntensity" : 0.03284603677659368,
      "Density" : 3.0216802168021686
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "bec32ae0-2f8f-473b-a98e-6ec8fb400f8a",
    "objectives" : {
      "NumberOfConcerns" : 0.9970597843841882,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4900395099320961,
      "MetricsIntensity" : 0.03283888496892036,
      "Density" : 0.9909301084830162
    },
    "euclideanDistance" : 39.028416414289666,
    "generation" : 45,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.533668341708543,
      "LackOfCohesion" : 0.4900395099320961,
      "MetricsIntensity" : 0.03283888496892036,
      "Density" : 3.020054200542005
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "9768b3c9-62c7-4802-ac8b-469409c1a2f8",
    "objectives" : {
      "NumberOfConcerns" : 0.9973864750081672,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.48752300013590977,
      "MetricsIntensity" : 0.03282987254690056,
      "Density" : 1.0026676151520542
    },
    "euclideanDistance" : 39.028693016845914,
    "generation" : 46,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5334003013561022,
      "LackOfCohesion" : 0.48752300013590977,
      "MetricsIntensity" : 0.03282987254690056,
      "Density" : 3.0558265582655846
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "d9bbc027-783d-476a-9a24-f424c70d3c5a",
    "objectives" : {
      "NumberOfConcerns" : 0.9960797125122509,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48965088340710594,
      "MetricsIntensity" : 0.0328420762282857,
      "Density" : 0.99128579050329
    },
    "euclideanDistance" : 40.027686154732,
    "generation" : 46,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.48965088340710594,
      "MetricsIntensity" : 0.0328420762282857,
      "Density" : 3.0211382113821137
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "aba078f5-e324-40fb-b783-5098eabcd109",
    "objectives" : {
      "NumberOfConcerns" : 0.99640640313623,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.49063343620784056,
      "MetricsIntensity" : 0.0328402719146405,
      "Density" : 0.9905744264627423
    },
    "euclideanDistance" : 40.02768870502964,
    "generation" : 31,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326633165829147,
      "LackOfCohesion" : 0.49063343620784056,
      "MetricsIntensity" : 0.032840271914640506,
      "Density" : 3.0189701897018977
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "3d8a650a-2b61-4fd9-b53e-4f0b97a95320",
    "objectives" : {
      "NumberOfConcerns" : 0.9980398562561255,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4881396528175404,
      "MetricsIntensity" : 0.0328279951167339,
      "Density" : 0.9991107949493153
    },
    "euclideanDistance" : 41.027230761205125,
    "generation" : 49,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5344048216976394,
      "LackOfCohesion" : 0.4881396528175404,
      "MetricsIntensity" : 0.03282799511673389,
      "Density" : 3.0449864498644983
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LOGGER], extractedMethods=[hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>), hudson.views.ListViewColumn.getDescriptor(), hudson.views.ListViewColumn.getColumnCaption(), hudson.views.ListViewColumn.shownByDefault(), hudson.views.ListViewColumn.all()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "25bb0337-4934-4c47-a59a-5d22be75760c",
    "objectives" : {
      "NumberOfConcerns" : 0.9957530218882719,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.48681996945319406,
      "MetricsIntensity" : 0.03287341947249047,
      "Density" : 1.002845456162191
    },
    "euclideanDistance" : 41.02725066871909,
    "generation" : 46,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5331991951710264,
      "LackOfCohesion" : 0.48681996945319406,
      "MetricsIntensity" : 0.03287341947249047,
      "Density" : 3.0596852957135106
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "e7ce2c6e-1b7e-4360-abfe-126f9301a0a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9967330937602091,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4851151332826174,
      "MetricsIntensity" : 0.03286807915353853,
      "Density" : 1.0033789791926018
    },
    "euclideanDistance" : 41.0272673138152,
    "generation" : 44,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5339366515837103,
      "LackOfCohesion" : 0.4851151332826174,
      "MetricsIntensity" : 0.03286807915353853,
      "Density" : 3.0563380281690127
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "02aa3eee-da24-4f3b-8294-8b63b56dfda3",
    "objectives" : {
      "NumberOfConcerns" : 0.99640640313623,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48636021731764467,
      "MetricsIntensity" : 0.032883873128782146,
      "Density" : 1.0021340921216433
    },
    "euclideanDistance" : 42.0265954613136,
    "generation" : 45,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5342052313883296,
      "LackOfCohesion" : 0.48636021731764467,
      "MetricsIntensity" : 0.03288387312878215,
      "Density" : 3.0542005420054203
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "033e9c39-0782-45c4-a5b4-3a0401dec2b2",
    "objectives" : {
      "NumberOfConcerns" : 0.9960797125122509,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.4882718978092827,
      "MetricsIntensity" : 0.032877535351523504,
      "Density" : 1.0023119331317802
    },
    "euclideanDistance" : 43.02599556528004,
    "generation" : 46,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5329311211664154,
      "LackOfCohesion" : 0.4882718978092827,
      "MetricsIntensity" : 0.0328775353515235,
      "Density" : 3.056399132321042
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String), hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled(), hudson.model.TimeZoneProperty.DescriptorImpl.save(), hudson.model.TimeZoneProperty.DescriptorImpl.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "5c87a4f4-0ef9-4bf9-a8ef-fb1dbce47355",
    "objectives" : {
      "NumberOfConcerns" : 0.9957530218882719,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.4904720801454778,
      "MetricsIntensity" : 0.03285986645863544,
      "Density" : 0.9903965854526053
    },
    "euclideanDistance" : 44.02515249387901,
    "generation" : 9,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532428355957767,
      "LackOfCohesion" : 0.4904720801454778,
      "MetricsIntensity" : 0.03285986645863544,
      "Density" : 3.018428184281843
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "f8f707f3-ef6d-4ab0-8819-c5f020278ef0",
    "objectives" : {
      "NumberOfConcerns" : 0.9947729500163345,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.4860154174444104,
      "MetricsIntensity" : 0.03288079038418124,
      "Density" : 1.0
    },
    "euclideanDistance" : 45.02473614974833,
    "generation" : 46,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316901408450703,
      "LackOfCohesion" : 0.4860154174444104,
      "MetricsIntensity" : 0.03288079038418125,
      "Density" : 3.0510037981551816
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "ee3ef5e0-3751-4a3b-a22e-394024e92f81",
    "objectives" : {
      "NumberOfConcerns" : 0.9954263312642927,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.48543678133531176,
      "MetricsIntensity" : 0.03288808569231715,
      "Density" : 1.0008892050506848
    },
    "euclideanDistance" : 45.0247641112823,
    "generation" : 46,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326961770623746,
      "LackOfCohesion" : 0.48543678133531176,
      "MetricsIntensity" : 0.03288808569231715,
      "Density" : 3.05371676614216
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "abe0384f-74e5-4af9-85ca-847e509d67eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9960797125122509,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.48659347937862757,
      "MetricsIntensity" : 0.032849671336668426,
      "Density" : 0.9992886359594523
    },
    "euclideanDistance" : 47.023702585895094,
    "generation" : 46,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201002,
      "LackOfCohesion" : 0.48659347937862757,
      "MetricsIntensity" : 0.032849671336668426,
      "Density" : 3.045528455284553
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "059c474c-e5d7-4373-a166-dc17e97ab781",
    "objectives" : {
      "NumberOfConcerns" : 0.9957530218882719,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.4852941859768298,
      "MetricsIntensity" : 0.03287635154765963,
      "Density" : 1.000355682020274
    },
    "euclideanDistance" : 48.0232113344431,
    "generation" : 45,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5324283559577676,
      "LackOfCohesion" : 0.4852941859768298,
      "MetricsIntensity" : 0.03287635154765963,
      "Density" : 3.0504338394793913
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "54ac27e6-695e-4082-a8de-8acd4ddfedb6",
    "objectives" : {
      "NumberOfConcerns" : 0.9947729500163345,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.48869173535245436,
      "MetricsIntensity" : 0.03286678227698363,
      "Density" : 1.0007113640405478
    },
    "euclideanDistance" : 48.023232880490085,
    "generation" : 45,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318254,
      "LackOfCohesion" : 0.48869173535245436,
      "MetricsIntensity" : 0.03286678227698363,
      "Density" : 3.0515184381778755
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "8101794d-983e-482c-afc0-42a663cbb685",
    "objectives" : {
      "NumberOfConcerns" : 0.9941195687683764,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4870627382445055,
      "MetricsIntensity" : 0.032894628969799576,
      "Density" : 0.9989329539391784
    },
    "euclideanDistance" : 50.022239583320086,
    "generation" : 40,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306841046277664,
      "LackOfCohesion" : 0.4870627382445055,
      "MetricsIntensity" : 0.032894628969799576,
      "Density" : 3.047748236570808
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "71f5ae66-4d69-4783-9485-deb5fe10a758",
    "objectives" : {
      "NumberOfConcerns" : 0.9947729500163345,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.4867326798963665,
      "MetricsIntensity" : 0.032873473285027426,
      "Density" : 0.9987551129290414
    },
    "euclideanDistance" : 51.021809791153146,
    "generation" : 45,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316901408450705,
      "LackOfCohesion" : 0.4867326798963665,
      "MetricsIntensity" : 0.03287347328502742,
      "Density" : 3.0455531453362257
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "c3ab329a-85bb-44c3-9b2f-3ccf9a36c096",
    "objectives" : {
      "NumberOfConcerns" : 0.9941195687683764,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4869951642058509,
      "MetricsIntensity" : 0.03289108625440611,
      "Density" : 0.9982215898986306
    },
    "euclideanDistance" : 52.021370283500445,
    "generation" : 45,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5314544539506791,
      "LackOfCohesion" : 0.4869951642058509,
      "MetricsIntensity" : 0.03289108625440611,
      "Density" : 3.0455778621812266
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "c069ac9f-efec-4211-8af8-43918de09469",
    "objectives" : {
      "NumberOfConcerns" : 0.9944462593923554,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.486959835315703,
      "MetricsIntensity" : 0.032869495428529384,
      "Density" : 0.9985772719189046
    },
    "euclideanDistance" : 52.021383009448655,
    "generation" : 44,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5304172951231774,
      "LackOfCohesion" : 0.486959835315703,
      "MetricsIntensity" : 0.03286949542852938,
      "Density" : 3.045010845986984
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "22852a67-f960-4f09-a8c3-d1cb62d5bf4f",
    "objectives" : {
      "NumberOfConcerns" : 0.9941195687683764,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.48667866326012993,
      "MetricsIntensity" : 0.03291602203968162,
      "Density" : 0.9985772719189046
    },
    "euclideanDistance" : 53.020971038550215,
    "generation" : 44,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5322255790533732,
      "LackOfCohesion" : 0.48667866326012993,
      "MetricsIntensity" : 0.03291602203968163,
      "Density" : 3.048317046688382
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "ce91026d-c84f-49ca-9fe8-a0bf59f8f91a",
    "objectives" : {
      "NumberOfConcerns" : 0.9967330937602091,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.48678299200059244,
      "MetricsIntensity" : 0.03291400281260618,
      "Density" : 0.9982215898986306
    },
    "euclideanDistance" : 53.02101436426522,
    "generation" : 47,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5339366515837103,
      "LackOfCohesion" : 0.48678299200059244,
      "MetricsIntensity" : 0.03291400281260618,
      "Density" : 3.0406283856988074
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Descriptor.PropertyType.itemType, hudson.model.Descriptor.PropertyType.clazz], extractedMethods=[hudson.model.Descriptor.PropertyType.getItemTypeDescriptor(), hudson.model.Descriptor.PropertyType.getEnumConstants(), hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors(), hudson.model.Descriptor.PropertyType.getItemType(), hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie(), hudson.model.Descriptor.PropertyType.computeItemType()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "95d3ed0f-cff0-491b-9771-23abeee6f081",
    "objectives" : {
      "NumberOfConcerns" : 0.9957530218882719,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4857323016031543,
      "MetricsIntensity" : 0.03292271767318612,
      "Density" : 0.9957318157567135
    },
    "euclideanDistance" : 55.02017835034406,
    "generation" : 46,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5324283559577678,
      "LackOfCohesion" : 0.4857323016031543,
      "MetricsIntensity" : 0.03292271767318612,
      "Density" : 3.0330444203683644
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "816ec72c-6ce3-496b-8c53-3767b9afbd08",
    "objectives" : {
      "NumberOfConcerns" : 0.9960797125122509,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4866125225572754,
      "MetricsIntensity" : 0.03291134491730908,
      "Density" : 0.9953761337364396
    },
    "euclideanDistance" : 55.02018559896926,
    "generation" : 38,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.4866125225572754,
      "MetricsIntensity" : 0.032911344917309085,
      "Density" : 3.0303194369247435
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "b383b98f-0a64-4005-b44b-d7548fe4e100",
    "objectives" : {
      "NumberOfConcerns" : 0.9973864750081672,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48627545402821143,
      "MetricsIntensity" : 0.032901227116161,
      "Density" : 0.9960874977769874
    },
    "euclideanDistance" : 55.02021915979337,
    "generation" : 46,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.533400301356102,
      "LackOfCohesion" : 0.48627545402821143,
      "MetricsIntensity" : 0.032901227116161,
      "Density" : 3.0308441558441555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "da1528d6-9dfd-4422-bd67-5554089a5897",
    "objectives" : {
      "NumberOfConcerns" : 0.9960797125122509,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.4884924499533358,
      "MetricsIntensity" : 0.03290981343327128,
      "Density" : 0.9935977236350703
    },
    "euclideanDistance" : 56.01981006000978,
    "generation" : 46,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.4884924499533358,
      "MetricsIntensity" : 0.03290981343327128,
      "Density" : 3.024905251759609
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "9263f21c-8c0f-4c97-9324-e8dea2cf9b55",
    "objectives" : {
      "NumberOfConcerns" : 0.9934661875204182,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.48804306299755734,
      "MetricsIntensity" : 0.032904931200997564,
      "Density" : 0.997154543837809
    },
    "euclideanDistance" : 57.019475278328194,
    "generation" : 37,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530447911424258,
      "LackOfCohesion" : 0.48804306299755734,
      "MetricsIntensity" : 0.032904931200997564,
      "Density" : 3.0423223005968527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Fingerprint.original, hudson.model.Fingerprint.XSTREAM, hudson.model.Fingerprint.usages, hudson.model.Fingerprint.md5sum, hudson.model.Fingerprint.logger], extractedMethods=[hudson.model.Fingerprint.rename(String, String), hudson.model.Fingerprint.delete(String), hudson.model.Fingerprint.getRangeSet(Job), hudson.model.Fingerprint.save(File), hudson.model.Fingerprint.getHashString(), hudson.model.Fingerprint._getUsages(), hudson.model.Fingerprint.readResolve(), hudson.model.Fingerprint.getActions(), hudson.model.Fingerprint.canDiscoverItem(String), hudson.model.Fingerprint.add(String, int), hudson.model.Fingerprint.getRangeSet(String), hudson.model.Fingerprint.getUsages(), hudson.model.Fingerprint.initFacets(Fingerprint), hudson.model.Fingerprint.getJobs(), hudson.model.Fingerprint.isAlive(), hudson.model.Fingerprint.load(String), hudson.model.Fingerprint.getOriginal(), hudson.model.Fingerprint.getXStream(), hudson.model.Fingerprint.load(byte[]), hudson.model.Fingerprint.getDisplayName(), hudson.model.Fingerprint.load(File), hudson.model.Fingerprint.getApi(), hudson.model.Fingerprint.save(), hudson.model.Fingerprint.getFileName(), hudson.model.Fingerprint.addWithoutSaving(String, int), hudson.model.Fingerprint.add(AbstractBuild), hudson.model.Fingerprint.getTimestampString(), hudson.model.Fingerprint.trim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "67cf0343-7a62-4a62-af1b-15e71cd9f66b",
    "objectives" : {
      "NumberOfConcerns" : 0.9957530218882719,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.4867719086257527,
      "MetricsIntensity" : 0.03290382073677725,
      "Density" : 0.994486928685755
    },
    "euclideanDistance" : 58.0191223467261,
    "generation" : 41,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531658291457286,
      "LackOfCohesion" : 0.4867719086257527,
      "MetricsIntensity" : 0.03290382073677725,
      "Density" : 3.027612344342176
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "19acd019-fd2a-45ed-9bfa-4a9196d02650",
    "objectives" : {
      "NumberOfConcerns" : 0.99640640313623,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.48646943680754634,
      "MetricsIntensity" : 0.03289959515172054,
      "Density" : 0.9948426107060289
    },
    "euclideanDistance" : 58.01913712247534,
    "generation" : 43,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437972,
      "LackOfCohesion" : 0.48646943680754634,
      "MetricsIntensity" : 0.032899595151720536,
      "Density" : 3.027056277056277
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "0ee64d2a-509d-4e88-a970-13c6747d4fc7",
    "objectives" : {
      "NumberOfConcerns" : 0.9934661875204182,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.48772714068176026,
      "MetricsIntensity" : 0.032929877823491396,
      "Density" : 0.9975102258580829
    },
    "euclideanDistance" : 58.01914308103016,
    "generation" : 45,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5312185297079555,
      "LackOfCohesion" : 0.48772714068176026,
      "MetricsIntensity" : 0.0329298778234914,
      "Density" : 3.0450597176981544
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='jenkins.fingerprints.FingerprintStorage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.fingerprints.FileFingerprintStorage'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "0b42bb44-c969-4655-8b7c-02dac7f155e4",
    "objectives" : {
      "NumberOfConcerns" : 0.9947729500163345,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.4868141743912863,
      "MetricsIntensity" : 0.03295821599686914,
      "Density" : 0.994309087675618
    },
    "euclideanDistance" : 60.01846630886455,
    "generation" : 44,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5324609964771014,
      "LackOfCohesion" : 0.4868141743912863,
      "MetricsIntensity" : 0.032958215996869135,
      "Density" : 3.0303523035230353
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "bb2bef90-691b-4ff6-97a9-08906e003537",
    "objectives" : {
      "NumberOfConcerns" : 0.9960797125122509,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.48429310705564516,
      "MetricsIntensity" : 0.032926735765334364,
      "Density" : 1.0032011381824648
    },
    "euclideanDistance" : 60.018615539687346,
    "generation" : 45,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.48429310705564516,
      "MetricsIntensity" : 0.032926735765334364,
      "Density" : 3.0541418516513263
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "4658e4f9-d8ab-48c1-9515-647e2aa13422",
    "objectives" : {
      "NumberOfConcerns" : 0.9950996406403136,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.48514275119276584,
      "MetricsIntensity" : 0.03293167249671945,
      "Density" : 1.005513071314245
    },
    "euclideanDistance" : 60.018644834880064,
    "generation" : 48,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5314228255404723,
      "LackOfCohesion" : 0.48514275119276584,
      "MetricsIntensity" : 0.03293167249671946,
      "Density" : 3.0628385698808227
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "5392ebb2-0df9-4c71-8337-e9563f06d081",
    "objectives" : {
      "NumberOfConcerns" : 0.9954263312642927,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.4845539571085363,
      "MetricsIntensity" : 0.03294435867767973,
      "Density" : 1.0026676151520542
    },
    "euclideanDistance" : 61.018293107850596,
    "generation" : 41,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.53192559074912,
      "LackOfCohesion" : 0.4845539571085363,
      "MetricsIntensity" : 0.03294435867767973,
      "Density" : 3.0541711809317436
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "f4f3d364-357a-430c-a47e-fc0755e6c986",
    "objectives" : {
      "NumberOfConcerns" : 0.9950996406403136,
      "NumberOfRefactorings" : 62.0,
      "LackOfCohesion" : 0.4867113518049684,
      "MetricsIntensity" : 0.032933033519819375,
      "Density" : 0.9939534056553441
    },
    "euclideanDistance" : 62.01786951510096,
    "generation" : 47,
    "numberOfRefactorings" : 62,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321931589537223,
      "LackOfCohesion" : 0.4867113518049684,
      "MetricsIntensity" : 0.03293303351981937,
      "Density" : 3.02762730227519
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "fbdbfae3-d960-4411-a597-3d6cb335142d",
    "objectives" : {
      "NumberOfConcerns" : 0.9944462593923554,
      "NumberOfRefactorings" : 63.0,
      "LackOfCohesion" : 0.48697382434398273,
      "MetricsIntensity" : 0.03295067935908477,
      "Density" : 0.9934198826249333
    },
    "euclideanDistance" : 63.0175692619041,
    "generation" : 45,
    "numberOfRefactorings" : 63,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5319577252138905,
      "LackOfCohesion" : 0.48697382434398273,
      "MetricsIntensity" : 0.03295067935908477,
      "Density" : 3.027642276422763
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "f238c606-135b-4739-9602-c27e3a1cf9d6",
    "objectives" : {
      "NumberOfConcerns" : 0.9957530218882719,
      "NumberOfRefactorings" : 63.0,
      "LackOfCohesion" : 0.48445249312412214,
      "MetricsIntensity" : 0.03291921158480259,
      "Density" : 1.0023119331317802
    },
    "euclideanDistance" : 63.01771124996911,
    "generation" : 45,
    "numberOfRefactorings" : 63,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531658291457286,
      "LackOfCohesion" : 0.48445249312412214,
      "MetricsIntensity" : 0.0329192115848026,
      "Density" : 3.051434759068759
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "57c40d8d-8813-4303-85bb-3e86bd7b989d",
    "objectives" : {
      "NumberOfConcerns" : 0.9950996406403136,
      "NumberOfRefactorings" : 64.0,
      "LackOfCohesion" : 0.4847134310414391,
      "MetricsIntensity" : 0.032936830349308624,
      "Density" : 1.0017784101013694
    },
    "euclideanDistance" : 64.01741806120248,
    "generation" : 43,
    "numberOfRefactorings" : 64,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531422825540472,
      "LackOfCohesion" : 0.4847134310414391,
      "MetricsIntensity" : 0.03293683034930863,
      "Density" : 3.0514626218851566
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "485f2e63-8f2e-4352-b7b5-87b91c03c8e6",
    "objectives" : {
      "NumberOfConcerns" : 0.9947729500163345,
      "NumberOfRefactorings" : 65.0,
      "LackOfCohesion" : 0.4856412893218334,
      "MetricsIntensity" : 0.032944798303233915,
      "Density" : 1.0017784101013694
    },
    "euclideanDistance" : 65.0171520910187,
    "generation" : 45,
    "numberOfRefactorings" : 65,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318251,
      "LackOfCohesion" : 0.4856412893218334,
      "MetricsIntensity" : 0.03294479830323392,
      "Density" : 3.051462621885157
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "8ce7e653-6b45-4ff1-ba87-76667a380745",
    "objectives" : {
      "NumberOfConcerns" : 0.9937928781443972,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.48645153456323165,
      "MetricsIntensity" : 0.0329631351365342,
      "Density" : 1.0039125022230126
    },
    "euclideanDistance" : 66.01691590994332,
    "generation" : 39,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530181086519115,
      "LackOfCohesion" : 0.48645153456323165,
      "MetricsIntensity" : 0.03296313513653419,
      "Density" : 3.059620596205963
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "bd24147a-0493-4168-87fe-209217798bba",
    "objectives" : {
      "NumberOfConcerns" : 0.9944462593923554,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.4877586726050634,
      "MetricsIntensity" : 0.03294685972278271,
      "Density" : 0.9928863595945225
    },
    "euclideanDistance" : 67.01651841676166,
    "generation" : 32,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311871227364178,
      "LackOfCohesion" : 0.4877586726050634,
      "MetricsIntensity" : 0.03294685972278272,
      "Density" : 3.0243770314192853
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "7834f924-7d12-4c08-b890-4a4c45c2e50f",
    "objectives" : {
      "NumberOfConcerns" : 0.9937928781443972,
      "NumberOfRefactorings" : 68.0,
      "LackOfCohesion" : 0.4880217231356893,
      "MetricsIntensity" : 0.03296451319240299,
      "Density" : 0.9923528365641117
    },
    "euclideanDistance" : 68.01626011696224,
    "generation" : 48,
    "numberOfRefactorings" : 68,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309511826874687,
      "LackOfCohesion" : 0.4880217231356893,
      "MetricsIntensity" : 0.03296451319240299,
      "Density" : 3.0243902439024395
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "ec49c106-c9ff-4d33-9879-e132736c6bec",
    "objectives" : {
      "NumberOfConcerns" : 0.9944462593923554,
      "NumberOfRefactorings" : 68.0,
      "LackOfCohesion" : 0.485800763254736,
      "MetricsIntensity" : 0.0329372699748628,
      "Density" : 1.0008892050506848
    },
    "euclideanDistance" : 68.01637883487284,
    "generation" : 44,
    "numberOfRefactorings" : 68,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530417295123177,
      "LackOfCohesion" : 0.485800763254736,
      "MetricsIntensity" : 0.0329372699748628,
      "Density" : 3.048754062838571
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.XSTREAM, hudson.model.UserIdMapper.PREFIX_PATTERN], extractedMethods=[hudson.model.UserIdMapper.getUsersDirectory(), hudson.model.UserIdMapper.init(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.getInstance(), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.clear()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "869f0324-4a66-4603-9b50-93778ecdab67",
    "objectives" : {
      "NumberOfConcerns" : 0.9934661875204182,
      "NumberOfRefactorings" : 69.0,
      "LackOfCohesion" : 0.4866110964574875,
      "MetricsIntensity" : 0.032955602655748116,
      "Density" : 1.0030232971723279
    },
    "euclideanDistance" : 69.0161641011101,
    "generation" : 40,
    "numberOfRefactorings" : 69,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104632,
      "LackOfCohesion" : 0.4866110964574875,
      "MetricsIntensity" : 0.032955602655748116,
      "Density" : 3.056910569105691
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "804ceb02-3bfe-4107-8ed8-573c8e112d0e",
    "objectives" : {
      "NumberOfConcerns" : 0.9931394968964391,
      "NumberOfRefactorings" : 70.0,
      "LackOfCohesion" : 0.4883937365054337,
      "MetricsIntensity" : 0.03296402144081807,
      "Density" : 1.000177841010137
    },
    "euclideanDistance" : 70.01590031444651,
    "generation" : 27,
    "numberOfRefactorings" : 70,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018113,
      "LackOfCohesion" : 0.4883937365054337,
      "MetricsIntensity" : 0.03296402144081807,
      "Density" : 3.051546391752577
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "df8da24d-1da4-4cec-ac0c-f7ae64545f6d",
    "objectives" : {
      "NumberOfConcerns" : 0.9941195687683764,
      "NumberOfRefactorings" : 70.0,
      "LackOfCohesion" : 0.48656936635933706,
      "MetricsIntensity" : 0.03293658518283809,
      "Density" : 1.0040903432331496
    },
    "euclideanDistance" : 70.01595750756613,
    "generation" : 42,
    "numberOfRefactorings" : 70,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52991452991453,
      "LackOfCohesion" : 0.48656936635933706,
      "MetricsIntensity" : 0.03293658518283809,
      "Density" : 3.0618221258134484
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "39da061a-7f09-4623-883a-0362c2d349ed",
    "objectives" : {
      "NumberOfConcerns" : 0.9928128062724599,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.48779621792582956,
      "MetricsIntensity" : 0.032983913754223416,
      "Density" : 1.0032011381824648
    },
    "euclideanDistance" : 72.01549224216092,
    "generation" : 45,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530211480362537,
      "LackOfCohesion" : 0.48779621792582956,
      "MetricsIntensity" : 0.032983913754223416,
      "Density" : 3.06243213897937
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "6be76cd3-71d8-44a4-89b3-efeb105b5c4d",
    "objectives" : {
      "NumberOfConcerns" : 0.9937928781443972,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.4858203420160459,
      "MetricsIntensity" : 0.03295306815496105,
      "Density" : 1.0049795482838342
    },
    "euclideanDistance" : 72.01551718544091,
    "generation" : 43,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058822,
      "LackOfCohesion" : 0.4858203420160459,
      "MetricsIntensity" : 0.03295306815496105,
      "Density" : 3.064533622559653
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "3ddc69ba-31fb-48a7-a0aa-3ab15ff111e7",
    "objectives" : {
      "NumberOfConcerns" : 0.9928128062724599,
      "NumberOfRefactorings" : 73.0,
      "LackOfCohesion" : 0.48890296558609136,
      "MetricsIntensity" : 0.03296844053181453,
      "Density" : 1.0026676151520542
    },
    "euclideanDistance" : 73.0152801312342,
    "generation" : 46,
    "numberOfRefactorings" : 73,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.48890296558609136,
      "MetricsIntensity" : 0.03296844053181454,
      "Density" : 3.0591427021161146
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "eb4df0fc-6120-4b0f-ae23-0a6d646ee78e",
    "objectives" : {
      "NumberOfConcerns" : 0.9931394968964391,
      "NumberOfRefactorings" : 73.0,
      "LackOfCohesion" : 0.48608217832652856,
      "MetricsIntensity" : 0.03297071531181935,
      "Density" : 1.0044460252534235
    },
    "euclideanDistance" : 73.01529018520777,
    "generation" : 46,
    "numberOfRefactorings" : 73,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018113,
      "LackOfCohesion" : 0.48608217832652856,
      "MetricsIntensity" : 0.032970715311819346,
      "Density" : 3.0645686380900705
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "6ee8c515-b0b9-45fc-8837-f2ac699e85aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9931394968964391,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.4876927966275247,
      "MetricsIntensity" : 0.032958703197574116,
      "Density" : 1.002845456162191
    },
    "euclideanDistance" : 74.01507248938718,
    "generation" : 46,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299446401610466,
      "LackOfCohesion" : 0.4876927966275247,
      "MetricsIntensity" : 0.032958703197574116,
      "Density" : 3.0596852957135106
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "c378dc56-6233-4a6d-aa4f-4b61097f7c70",
    "objectives" : {
      "NumberOfConcerns" : 0.9924861156484809,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.48795595603421477,
      "MetricsIntensity" : 0.03297637295485003,
      "Density" : 1.0023119331317802
    },
    "euclideanDistance" : 75.01485750407886,
    "generation" : 38,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5297079556898283,
      "LackOfCohesion" : 0.48795595603421477,
      "MetricsIntensity" : 0.03297637295485003,
      "Density" : 3.05971769815418
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "9188826a-4e7d-4959-adf0-9079951ebffc",
    "objectives" : {
      "NumberOfConcerns" : 0.9928128062724599,
      "NumberOfRefactorings" : 76.0,
      "LackOfCohesion" : 0.49004616417826957,
      "MetricsIntensity" : 0.0329591042907618,
      "Density" : 1.0010670460608215
    },
    "euclideanDistance" : 76.01466334888676,
    "generation" : 32,
    "numberOfRefactorings" : 76,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5286720321931588,
      "LackOfCohesion" : 0.49004616417826957,
      "MetricsIntensity" : 0.0329591042907618,
      "Density" : 3.054259359739554
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem), hudson.search.SuggestedItem.getPath(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "2415b94d-0fa4-4b8f-8d89-7869414641a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9924861156484809,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.48937479580498716,
      "MetricsIntensity" : 0.032974364513281874,
      "Density" : 0.9983994309087676
    },
    "euclideanDistance" : 77.01442984995006,
    "generation" : 40,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289380976346245,
      "LackOfCohesion" : 0.48937479580498716,
      "MetricsIntensity" : 0.03297436451328187,
      "Density" : 3.046120455778622
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.items], extractedMethods=[jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>), jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node), jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "c5889df3-014a-4d61-9c64-4c4dc414488c",
    "objectives" : {
      "NumberOfConcerns" : 0.9921594250245018,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4872056908996316,
      "MetricsIntensity" : 0.032992883411810094,
      "Density" : 1.0032011381824648
    },
    "euclideanDistance" : 77.01447429388787,
    "generation" : 41,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5292044310171191,
      "LackOfCohesion" : 0.4872056908996316,
      "MetricsIntensity" : 0.032992883411810094,
      "Density" : 3.0624321389793705
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "381d7e64-cc06-4f9a-abb3-69de4d1ad24a",
    "objectives" : {
      "NumberOfConcerns" : 0.9921594250245018,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4872056908996318,
      "MetricsIntensity" : 0.03299288341181008,
      "Density" : 1.0032011381824648
    },
    "euclideanDistance" : 77.01447429388787,
    "generation" : 45,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5292044310171196,
      "LackOfCohesion" : 0.4872056908996318,
      "MetricsIntensity" : 0.03299288341181009,
      "Density" : 3.0624321389793705
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "b19fde76-9314-4e80-8141-e9b6d8092cfe",
    "objectives" : {
      "NumberOfConcerns" : 0.9924861156484809,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4871701102818075,
      "MetricsIntensity" : 0.032971155179858665,
      "Density" : 1.0035568202027387
    },
    "euclideanDistance" : 77.01448290285767,
    "generation" : 46,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.4871701102818075,
      "MetricsIntensity" : 0.03297115517985867,
      "Density" : 3.0618556701030935
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "c353ab37-3c93-45c4-b237-a0fbcf1baf4e",
    "objectives" : {
      "NumberOfConcerns" : 0.9924861156484809,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4871701102818073,
      "MetricsIntensity" : 0.03297115517985868,
      "Density" : 1.0035568202027387
    },
    "euclideanDistance" : 77.01448290285767,
    "generation" : 45,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.4871701102818073,
      "MetricsIntensity" : 0.03297115517985867,
      "Density" : 3.0618556701030926
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "605b1178-dfdc-472b-961d-24bc7fbfa20e",
    "objectives" : {
      "NumberOfConcerns" : 0.9918327344005227,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.48743283599878917,
      "MetricsIntensity" : 0.032988822057567826,
      "Density" : 1.0030232971723279
    },
    "euclideanDistance" : 78.01428373663178,
    "generation" : 40,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.48743283599878917,
      "MetricsIntensity" : 0.03298882205756783,
      "Density" : 3.0618892508143327
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doFillTimeZoneNameItems()', targetType='hudson.util.ListBoxModel'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "6c590ecd-5cb4-4ba6-992b-18994004037e",
    "objectives" : {
      "NumberOfConcerns" : 0.9924861156484809,
      "NumberOfRefactorings" : 79.0,
      "LackOfCohesion" : 0.48710259549924356,
      "MetricsIntensity" : 0.03296766790501862,
      "Density" : 1.002845456162191
    },
    "euclideanDistance" : 79.01410686392886,
    "generation" : 35,
    "numberOfRefactorings" : 79,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528938097634625,
      "LackOfCohesion" : 0.48710259549924356,
      "MetricsIntensity" : 0.03296766790501862,
      "Density" : 3.059685295713511
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "3ad3a745-d523-4342-922c-9ff1fa5d63e5",
    "objectives" : {
      "NumberOfConcerns" : 0.9918327344005227,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.487365429008017,
      "MetricsIntensity" : 0.03298534261243672,
      "Density" : 1.0023119331317802
    },
    "euclideanDistance" : 80.01391737990677,
    "generation" : 39,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5287009063444104,
      "LackOfCohesion" : 0.487365429008017,
      "MetricsIntensity" : 0.03298534261243673,
      "Density" : 3.05971769815418
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "c68d0db5-6dd5-4615-a4e9-3c559dc8889c",
    "objectives" : {
      "NumberOfConcerns" : 0.9915060437765436,
      "NumberOfRefactorings" : 81.0,
      "LackOfCohesion" : 0.48759248595148524,
      "MetricsIntensity" : 0.032981285419783506,
      "Density" : 1.0021340921216433
    },
    "euclideanDistance" : 81.01374075532485,
    "generation" : 41,
    "numberOfRefactorings" : 81,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449926,
      "LackOfCohesion" : 0.48759248595148524,
      "MetricsIntensity" : 0.03298128541978351,
      "Density" : 3.059174809989143
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    } ]
  }, {
    "solutionId" : "77dd6cfd-1cdc-4d9c-94e6-055b5bfddfbf",
    "objectives" : {
      "NumberOfConcerns" : 0.9918327344005227,
      "NumberOfRefactorings" : 81.0,
      "LackOfCohesion" : 0.4885766654952674,
      "MetricsIntensity" : 0.032979480664064205,
      "Density" : 1.0014227280810954
    },
    "euclideanDistance" : 81.01374188653155,
    "generation" : 33,
    "numberOfRefactorings" : 81,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.4885766654952674,
      "MetricsIntensity" : 0.032979480664064205,
      "Density" : 3.0570032573289905
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.useCounter, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()]"
      } ]
    } ]
  }, {
    "solutionId" : "cebcde60-298d-4fda-8ad6-294cdcc9b322",
    "objectives" : {
      "NumberOfConcerns" : 0.9918327344005227,
      "NumberOfRefactorings" : 84.0,
      "LackOfCohesion" : 0.48815049429095025,
      "MetricsIntensity" : 0.03298150218926455,
      "Density" : 1.0017784101013694
    },
    "euclideanDistance" : 84.01325294761855,
    "generation" : 9,
    "numberOfRefactorings" : 84,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.48815049429095025,
      "MetricsIntensity" : 0.03298150218926455,
      "Density" : 3.0564297341291367
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.ExtensionComponent.compareTo(ExtensionComponent<T>), hudson.ExtensionComponent.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "0fcd3256-f29e-4959-88fc-417d964a8ab7",
    "objectives" : {
      "NumberOfConcerns" : 0.9911793531525646,
      "NumberOfRefactorings" : 85.0,
      "LackOfCohesion" : 0.48841390642964694,
      "MetricsIntensity" : 0.03299918453571313,
      "Density" : 1.0012448870709585
    },
    "euclideanDistance" : 85.01308466891538,
    "generation" : 36,
    "numberOfRefactorings" : 85,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989924,
      "LackOfCohesion" : 0.48841390642964694,
      "MetricsIntensity" : 0.032999184535713134,
      "Density" : 3.0564603691639527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "86c90332-27c8-440e-a289-417821a70678",
    "objectives" : {
      "NumberOfConcerns" : 0.9911793531525646,
      "NumberOfRefactorings" : 85.0,
      "LackOfCohesion" : 0.4884139064296468,
      "MetricsIntensity" : 0.03299918453571314,
      "Density" : 1.0012448870709585
    },
    "euclideanDistance" : 85.01308466891538,
    "generation" : 43,
    "numberOfRefactorings" : 85,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989926,
      "LackOfCohesion" : 0.4884139064296468,
      "MetricsIntensity" : 0.03299918453571314,
      "Density" : 3.0564603691639527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  }, {
    "solutionId" : "e0394101-bed2-473a-a561-0db594c7ac21",
    "objectives" : {
      "NumberOfConcerns" : 0.9911793531525646,
      "NumberOfRefactorings" : 85.0,
      "LackOfCohesion" : 0.48841390642964744,
      "MetricsIntensity" : 0.03299918453571312,
      "Density" : 1.0012448870709585
    },
    "euclideanDistance" : 85.01308466891538,
    "generation" : 39,
    "numberOfRefactorings" : 85,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989922,
      "LackOfCohesion" : 0.48841390642964744,
      "MetricsIntensity" : 0.03299918453571312,
      "Density" : 3.056460369163953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.ModelObjectWithContextMenu.ContextMenu",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addAll(Collection<? extends Action>)', targetType='hudson.model.MyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Node)', targetType='hudson.slaves.AbstractCloudImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(Action)', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String)', targetType='jenkins.widgets.HistoryPageFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(MenuItem)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.add(String, String, String, boolean, boolean)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.ModelObjectWithContextMenu.ContextMenu.addHeader(String)', targetType='jenkins.model.RenameAction.TransientActionFactoryImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='hudson.util.IOException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.slaves.OfflineCause.ChannelTermination'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getUsersDirectory()', targetType='hudson.FilePath.CopyRecursiveRemoteToLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.init()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='jenkins.slaves.systemInfo.SystemPropertySlaveInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.ExpressionFactory2.JexlExpression'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, SearchItem)', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.CaseInsensitiveComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.tools.ToolInstallerDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.TimeZoneProperty.DescriptorImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.isEnabled()', targetType='jenkins.MissingDependencyException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.load()', targetType='jenkins.security.UpdateSiteWarningsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.doCheckTimeZoneName(String)', targetType='hudson.MarkupText.SubText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.TimeZoneProperty.DescriptorImpl.save()', targetType='jenkins.util.JenkinsJVM'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Descriptor.PropertyType",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptor()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemTypeDescriptorOrDie()', targetType='hudson.model.TextParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.computeItemType()', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getEnumConstants()', targetType='hudson.security.AccountCreationFailedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getApplicableItemDescriptors()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Descriptor.PropertyType.getItemType()', targetType='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Descriptor.PropertyType.itemType', targetTypeName='jenkins.model.item_category.ItemCategory.UncategorizedCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getJobs()', targetType='hudson.DescriptorExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getFileName()', targetType='hudson.FilePath.ReadLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(AbstractBuild)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getTimestampString()', targetType='hudson.model.queue.BackFiller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save(File)', targetType='jenkins.management.AdministrativeMonitorsApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(byte[])', targetType='hudson.cli.ClearQueueCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.isAlive()', targetType='hudson.model.OneOffExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getXStream()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.trim()', targetType='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Fingerprint.XSTREAM', targetTypeName='hudson.ExpressionFactory2.JellyMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getActions()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getApi()', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint._getUsages()', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.canDiscoverItem(String)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.add(String, int)', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getDisplayName()', targetType='hudson.security.GlobalSecurityConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getOriginal()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getHashString()', targetType='jenkins.tasks.filters.EnvVarsFilterLocalRuleDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(Job)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getRangeSet(String)', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.readResolve()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.rename(String, String)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.addWithoutSaving(String, int)', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.getUsages()', targetType='hudson.util.NoClientBindSSLProtocolSocketFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.delete(String)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.load(File)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.save()', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.initFacets(Fingerprint)', targetType='hudson.ExtensionFinder.GuiceExtensionAnnotation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='hudson.util.ProcessTree.Remote.RemoteProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.createDefaultInitialColumnList(List<Descriptor<ListViewColumn>>)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.views.ListViewColumn.LOGGER', targetTypeName='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.all()', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.model.PaneStatusProperties'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.ExtensionComponent",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.compareTo(ExtensionComponent<T>)', targetType='jenkins.model.lazy.BuildReference.DefaultHolderFactory.WeakHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.ExtensionComponent.getInstance()', targetType='hudson.model.Run.Artifact'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.readResolve()', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getUseCounter()', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.notifyUse()', targetType='hudson.FilePath.DeleteRecursive'"
      } ]
    } ]
  } ]
}