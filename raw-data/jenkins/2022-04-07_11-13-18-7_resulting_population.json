{
  "executionId" : "384eddfb-b93e-4c25-b583-9750c76b4285",
  "computingTime" : 3775756,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 31,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 2.990243902439024,
    "meanNumConcerns" : 1.4843907351460226,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "fb2af9a4-524e-441b-b81d-cfb82d35f15d",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48964132554475565,
      "MetricsIntensity" : 0.03288474744843908,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 29.03828265556173,
    "generation" : 1,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.476118652589241,
      "LackOfCohesion" : 0.48964132554475565,
      "MetricsIntensity" : 0.03288474744843908,
      "Density" : 2.9755965292841653
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "c0a8ad96-30b4-462d-a420-3386ecc1d9d0",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4896397446482348,
      "MetricsIntensity" : 0.032884973100471906,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 29.038288837816264,
    "generation" : 1,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892405,
      "LackOfCohesion" : 0.4896397446482348,
      "MetricsIntensity" : 0.032884973100471906,
      "Density" : 2.974525745257453
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "6807b651-2534-4b1b-baa8-f4663be4eb62",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4885926544437145,
      "MetricsIntensity" : 0.03288373780024092,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 29.038289045195835,
    "generation" : 1,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978898,
      "LackOfCohesion" : 0.4885926544437145,
      "MetricsIntensity" : 0.03288373780024091,
      "Density" : 2.976681127982646
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "ae719198-5e20-4974-a646-d2a17db49aaa",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48844659289003356,
      "MetricsIntensity" : 0.03289161305618673,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 29.038334731207797,
    "generation" : 1,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477626948215184,
      "LackOfCohesion" : 0.48844659289003356,
      "MetricsIntensity" : 0.03289161305618673,
      "Density" : 2.977235772357724
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "2577f145-59b5-4104-bf22-c79f79a830a6",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4885158202158324,
      "MetricsIntensity" : 0.03289161305618672,
      "Density" : 0.9958310676092079
    },
    "euclideanDistance" : 29.038353759051223,
    "generation" : 1,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478129713423831,
      "LackOfCohesion" : 0.4885158202158324,
      "MetricsIntensity" : 0.03289161305618672,
      "Density" : 2.977777777777778
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "2586a9d2-aa6c-445d-aea2-57ff7fa2d003",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4884469117263066,
      "MetricsIntensity" : 0.03289161305618673,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 30.037035244628495,
    "generation" : 1,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477124183006536,
      "LackOfCohesion" : 0.4884469117263066,
      "MetricsIntensity" : 0.03289161305618673,
      "Density" : 2.9761517615176163
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "09269b4e-0ba4-498a-8dac-38fe65e0656d",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48833080218351577,
      "MetricsIntensity" : 0.03289307400845057,
      "Density" : 0.9958310676092079
    },
    "euclideanDistance" : 31.03587937206988,
    "generation" : 1,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238303,
      "LackOfCohesion" : 0.48833080218351577,
      "MetricsIntensity" : 0.03289307400845056,
      "Density" : 2.9777777777777783
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "cdc17f25-49b1-4e04-ad1b-2f8e05d236f5",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48779017317352547,
      "MetricsIntensity" : 0.03286858903721112,
      "Density" : 0.9972811310494835
    },
    "euclideanDistance" : 31.03597195205866,
    "generation" : 1,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480643539467069,
      "LackOfCohesion" : 0.48779017317352547,
      "MetricsIntensity" : 0.03286858903721112,
      "Density" : 2.9804983748645713
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "80029423-ea55-480c-bf70-49c0f6de58da",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48806371227699835,
      "MetricsIntensity" : 0.032868589037211106,
      "Density" : 0.9972811310494835
    },
    "euclideanDistance" : 31.035976252458514,
    "generation" : 1,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670698,
      "LackOfCohesion" : 0.48806371227699835,
      "MetricsIntensity" : 0.032868589037211106,
      "Density" : 2.980498374864571
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "f6c27a96-6fe1-40cd-8aa6-b99c54749f32",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48916388815304046,
      "MetricsIntensity" : 0.03289430930868159,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 32.03467991639131,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4756158873805947,
      "LackOfCohesion" : 0.48916388815304046,
      "MetricsIntensity" : 0.032894309308681584,
      "Density" : 2.9739837398373985
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "c86f2b7e-5f06-4ca3-88d4-1bd91e6d768b",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4890870043284054,
      "MetricsIntensity" : 0.03289408365664876,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 32.034694914201886,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892402,
      "LackOfCohesion" : 0.4890870043284054,
      "MetricsIntensity" : 0.032894083656648754,
      "Density" : 2.976138828633405
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "8b3c4540-9cb2-4529-be02-ce3ada78a4d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4890887955683007,
      "MetricsIntensity" : 0.03289408365664874,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 32.03469494154954,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47611865258924,
      "LackOfCohesion" : 0.4890887955683007,
      "MetricsIntensity" : 0.03289408365664874,
      "Density" : 2.9761388286334056
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "2c603f28-a33f-4481-977c-f287bc3fe567",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48914551255583355,
      "MetricsIntensity" : 0.03289329966048341,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 32.03469580671971,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892407,
      "LackOfCohesion" : 0.48914551255583355,
      "MetricsIntensity" : 0.03289329966048341,
      "Density" : 2.976138828633406
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "f3ac6cd2-95a7-40d0-a502-3a4f097eb214",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4895776751608619,
      "MetricsIntensity" : 0.03288620840070292,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 32.03469677322887,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47611865258924,
      "LackOfCohesion" : 0.4895776751608619,
      "MetricsIntensity" : 0.03288620840070292,
      "Density" : 2.9755965292841644
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "0f00ae73-1358-4314-a75f-dd019d2970e8",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4883387947530181,
      "MetricsIntensity" : 0.03289307400845057,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 32.03472148741188,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065351,
      "LackOfCohesion" : 0.4883387947530181,
      "MetricsIntensity" : 0.03289307400845057,
      "Density" : 2.9761517615176163
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "777b8aab-5336-426c-9b02-09a76aedf617",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4884620643842812,
      "MetricsIntensity" : 0.03289161305618672,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 32.03472336527697,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065351,
      "LackOfCohesion" : 0.4884620643842812,
      "MetricsIntensity" : 0.03289161305618672,
      "Density" : 2.976151761517616
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "53b3eff0-67c2-4050-88ca-d7a42ae94cf8",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48965800551269184,
      "MetricsIntensity" : 0.03288339087266621,
      "Density" : 0.9954685517491391
    },
    "euclideanDistance" : 32.03474724675242,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065356,
      "LackOfCohesion" : 0.48965800551269184,
      "MetricsIntensity" : 0.03288339087266621,
      "Density" : 2.9783080260303683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "7173c760-5874-4a6e-9d05-7b948de4e810",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4896580055126921,
      "MetricsIntensity" : 0.0328833908726662,
      "Density" : 0.9954685517491391
    },
    "euclideanDistance" : 32.03474724675242,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065356,
      "LackOfCohesion" : 0.4896580055126921,
      "MetricsIntensity" : 0.032883390872666195,
      "Density" : 2.97830802603037
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "cf8317f2-d8f0-4b6c-bbc0-2f99adde2d22",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48776010401445996,
      "MetricsIntensity" : 0.03287405466445654,
      "Density" : 0.9967373572593801
    },
    "euclideanDistance" : 32.03481054615859,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796380090497745,
      "LackOfCohesion" : 0.48776010401445996,
      "MetricsIntensity" : 0.03287405466445654,
      "Density" : 2.980487804878048
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "248f0b86-fa11-4b8e-90cb-c09dcf5306b4",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4880259866190966,
      "MetricsIntensity" : 0.03287405466445653,
      "Density" : 0.9967373572593801
    },
    "euclideanDistance" : 32.03481459557431,
    "generation" : 1,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479638009049774,
      "LackOfCohesion" : 0.4880259866190966,
      "MetricsIntensity" : 0.03287405466445653,
      "Density" : 2.9804878048780483
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "19806d35-c496-43ff-944f-5ef7a0a27708",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4879698104052577,
      "MetricsIntensity" : 0.03288598274867009,
      "Density" : 0.9951060358890701
    },
    "euclideanDistance" : 33.03363902907461,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892407,
      "LackOfCohesion" : 0.4879698104052577,
      "MetricsIntensity" : 0.03288598274867009,
      "Density" : 2.977223427331887
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate(), jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities2()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "04946226-fe6a-452d-b3e9-c46af131a4f2",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48908732316467823,
      "MetricsIntensity" : 0.03289408365664874,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 33.033644645389494,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892407,
      "LackOfCohesion" : 0.48908732316467823,
      "MetricsIntensity" : 0.03289408365664874,
      "Density" : 2.9761388286334056
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "fa151dba-6515-44ce-bc1e-d8a38c6bf6ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4895087666713361,
      "MetricsIntensity" : 0.03288620840070293,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 33.03364542228655,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.476118652589241,
      "LackOfCohesion" : 0.4895087666713361,
      "MetricsIntensity" : 0.03288620840070293,
      "Density" : 2.975596529284164
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "ca4a9674-af48-4843-9be5-919303ee7b98",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48918213001614386,
      "MetricsIntensity" : 0.0328926227043849,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 33.03364604775569,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892405,
      "LackOfCohesion" : 0.48918213001614386,
      "MetricsIntensity" : 0.0328926227043849,
      "Density" : 2.976138828633405
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "56dc8267-6de8-4b4b-b1c3-1433cf077a4e",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4879698104052579,
      "MetricsIntensity" : 0.032885982748670085,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 33.03367587498059,
    "generation" : 1,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065358,
      "LackOfCohesion" : 0.4879698104052579,
      "MetricsIntensity" : 0.032885982748670085,
      "Density" : 2.978850325379609
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate(), jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities2()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "a2ce7bba-1939-4e76-bf40-7b32afb9f0ce",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4891806576125214,
      "MetricsIntensity" : 0.0328926227043849,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 34.03265740091214,
    "generation" : 1,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892407,
      "LackOfCohesion" : 0.4891806576125214,
      "MetricsIntensity" : 0.0328926227043849,
      "Density" : 2.9761388286334056
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='hudson.model.RunMap.ThisIsHowItsLoaded'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, Writer)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.console.UrlAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "2fc814af-9b68-4ee5-8833-7a031f4f2efc",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48856117032317864,
      "MetricsIntensity" : 0.03287405466445653,
      "Density" : 0.9961935834692768
    },
    "euclideanDistance" : 34.032760468741614,
    "generation" : 1,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796380090497738,
      "LackOfCohesion" : 0.48856117032317864,
      "MetricsIntensity" : 0.03287405466445653,
      "Density" : 2.9788617886178863
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.node_monitors.ClockMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "ba2d5499-6293-4d5a-b135-359b3501e4b6",
    "objectives" : {
      "NumberOfConcerns" : 0.9986431478968792,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4885709419475748,
      "MetricsIntensity" : 0.03287370773688185,
      "Density" : 0.9965560993293456
    },
    "euclideanDistance" : 34.032781174066976,
    "generation" : 1,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4801407742584205,
      "LackOfCohesion" : 0.4885709419475748,
      "MetricsIntensity" : 0.03287370773688185,
      "Density" : 2.978331527627302
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.node_monitors.ClockMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "21eda7e0-a3a0-4759-9295-974bef891eac",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4880187486169329,
      "MetricsIntensity" : 0.03287773535676141,
      "Density" : 0.9960123255392423
    },
    "euclideanDistance" : 36.030910902348246,
    "generation" : 1,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324787,
      "LackOfCohesion" : 0.4880187486169329,
      "MetricsIntensity" : 0.03287773535676141,
      "Density" : 2.9783197831978314
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.model.labels.LabelExpression.And'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "ab161e34-d529-426e-bc16-0907183005f6",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48801874861693323,
      "MetricsIntensity" : 0.03287405466445654,
      "Density" : 0.9963748413993112
    },
    "euclideanDistance" : 36.0309303156759,
    "generation" : 1,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411254,
      "LackOfCohesion" : 0.48801874861693323,
      "MetricsIntensity" : 0.03287405466445654,
      "Density" : 2.9777898158179847
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='hudson.model.Queue.ItemList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  }, {
    "solutionId" : "71068945-e014-4433-ace2-080f56cb38c6",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.48845844046373665,
      "MetricsIntensity" : 0.03288293313793088,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 38.02924469056661,
    "generation" : 1,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477626948215184,
      "LackOfCohesion" : 0.48845844046373665,
      "MetricsIntensity" : 0.03288293313793088,
      "Density" : 2.975067750677507
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.triggers.TimerTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.model.labels.LabelExpression.And'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.model.labels.LabelExpression.And'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.model.labels.LabelExpression.And'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.node_monitors.ClockMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.model.UpdateCenter.DownloadJob'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.isAbsolute(String)', targetType='hudson.tasks.LogRotator.LRDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.lineIterator(InputStream, String)', targetType='hudson.PluginManager.UberClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.writeLines(Collection, String, OutputStream)', targetType='hudson.cli.GetViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.contentEquals(InputStream, InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.closeQuietly(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toString(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.toInputStream(String, String)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readLines(InputStream)', targetType='hudson.tools.InstallSourceProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.absolutize(File, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.drain(InputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mkdirs(File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.skip(InputStream, long)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.readFirstLine(InputStream, String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(File, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, File)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copyLarge(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.copy(InputStream, OutputStream)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.util.NullStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getStyle()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='CLIEndpoint'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.util.ReflectionUtils.Parameter'"
      } ]
    } ]
  } ]
}