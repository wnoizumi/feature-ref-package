{
  "executionId" : "787ca3e4-ba1b-4989-ab19-07605378b998",
  "computingTime" : 12110,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0736329182458038,
    "meanNumConcerns" : 1.5337361530715001,
    "meanMetricsIntensity" : 0.032969370243008465,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "00c57384-bc56-49b6-b2f3-e19100ff834c",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 3.0,
      "LackOfCohesion" : 0.48628888179635227,
      "MetricsIntensity" : 0.032890420151917975,
      "Density" : 0.9998238506253303
    },
    "euclideanDistance" : 3.352782405940264,
    "generation" : 0,
    "numberOfRefactorings" : 3,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5344394167923572,
      "LackOfCohesion" : 0.48628888179635227,
      "MetricsIntensity" : 0.032890420151917975,
      "Density" : 3.0697674418604666,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "dd63405f-3b3b-47f2-a3a0-111529d5a69b",
    "objectives" : {
      "NumberOfConcerns" : 1.0039395929087327,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.4859542721644174,
      "MetricsIntensity" : 0.0328425044254074,
      "Density" : 1.0007045974986788
    },
    "euclideanDistance" : 8.139197416354792,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5336008024072219,
      "LackOfCohesion" : 0.4859542721644174,
      "MetricsIntensity" : 0.0328425044254074,
      "Density" : 3.06418554476807,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f028b765-93d1-400d-8195-8c2c7e66d91d",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48533336164169,
      "MetricsIntensity" : 0.03283864952837938,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 10.110601062177528,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530715005035246,
      "LackOfCohesion" : 0.48533336164169,
      "MetricsIntensity" : 0.03283864952837938,
      "Density" : 3.060638873849486,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "14439c00-c69e-4eed-a101-50fb6bceb5e2",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48602622936882967,
      "MetricsIntensity" : 0.032829761833015246,
      "Density" : 0.9896071868944866
    },
    "euclideanDistance" : 14.079035826114309,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531893520843797,
      "LackOfCohesion" : 0.48602622936882967,
      "MetricsIntensity" : 0.03282976183301525,
      "Density" : 3.0351161534305775,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "4004d19b-06f1-4af7-a399-c156828cf49c",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4869511768950631,
      "MetricsIntensity" : 0.032855467774522015,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 14.079667964421482,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316582914572863,
      "LackOfCohesion" : 0.4869511768950631,
      "MetricsIntensity" : 0.032855467774522015,
      "Density" : 3.06320907617504,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.PluginManager.PluginUpdateMonitor.PluginUpdateInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.tasks._maven.MavenWarningNote'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "7712459c-bfa0-4748-8a75-d07663f02968",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.487536878725975,
      "MetricsIntensity" : 0.032856881962722614,
      "Density" : 0.9897833362691563
    },
    "euclideanDistance" : 15.073788493347148,
    "generation" : 0,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.487536878725975,
      "MetricsIntensity" : 0.032856881962722614,
      "Density" : 3.035656401944895,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "5c1c62bc-cb71-4c20-8705-cf3c33e8964d",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4852932994664868,
      "MetricsIntensity" : 0.03285568168910901,
      "Density" : 0.9922494275145324
    },
    "euclideanDistance" : 16.069240539542985,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318256,
      "LackOfCohesion" : 0.4852932994664868,
      "MetricsIntensity" : 0.03285568168910901,
      "Density" : 3.046511627906976,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "071db821-20ef-4b86-b645-8489894606be",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48602509657770704,
      "MetricsIntensity" : 0.03279151381478335,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 17.065553589093174,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318254,
      "LackOfCohesion" : 0.48602509657770704,
      "MetricsIntensity" : 0.032791513814783346,
      "Density" : 3.0632432432432437,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "edac17b9-2e12-4fc8-acb6-3e74539664d9",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48681064812331454,
      "MetricsIntensity" : 0.032821160786006345,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 17.06561315475089,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5308890005022602,
      "LackOfCohesion" : 0.48681064812331454,
      "MetricsIntensity" : 0.032821160786006345,
      "Density" : 3.0621621621621626,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6b4fdfc6-7cc7-468e-85db-ca39eb69c224",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48665979206116416,
      "MetricsIntensity" : 0.03280905004095577,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 17.065667945383822,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437967,
      "LackOfCohesion" : 0.48665979206116416,
      "MetricsIntensity" : 0.03280905004095577,
      "Density" : 3.0615883306320906,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a730f4ba-d39a-4e14-837a-8362a29a0539",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4855194796003746,
      "MetricsIntensity" : 0.032809129652596976,
      "Density" : 0.9971816100052845
    },
    "euclideanDistance" : 18.061852625806555,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318254,
      "LackOfCohesion" : 0.4855194796003746,
      "MetricsIntensity" : 0.03280912965259698,
      "Density" : 3.0616549486208755,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "026abcd4-90ae-4b6a-9931-84a70c68e81e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4858031023471387,
      "MetricsIntensity" : 0.03283503176756247,
      "Density" : 0.9926017262638718
    },
    "euclideanDistance" : 19.058341274993307,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52991452991453,
      "LackOfCohesion" : 0.4858031023471387,
      "MetricsIntensity" : 0.03283503176756247,
      "Density" : 3.0459459459459466,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0b4acdf1-299d-4901-a15a-861680a1895c",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4859223454300495,
      "MetricsIntensity" : 0.03276253724497135,
      "Density" : 0.9994715518759908
    },
    "euclideanDistance" : 19.058910131805234,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5336345381526104,
      "LackOfCohesion" : 0.4859223454300495,
      "MetricsIntensity" : 0.03276253724497135,
      "Density" : 3.0620615218564486,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "93f94217-dd8f-43aa-bc38-d2c1accfeae9",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48806628055121837,
      "MetricsIntensity" : 0.032865974789012355,
      "Density" : 0.9883741412717985
    },
    "euclideanDistance" : 20.05532777866382,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.48806628055121837,
      "MetricsIntensity" : 0.032865974789012355,
      "Density" : 3.034613304488913,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1e51e653-3689-4255-bc41-90ccb57a64a7",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.486346913411803,
      "MetricsIntensity" : 0.03283877126076949,
      "Density" : 0.9920732781398626
    },
    "euclideanDistance" : 20.055386827351505,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528908999497235,
      "LackOfCohesion" : 0.486346913411803,
      "MetricsIntensity" : 0.03283877126076949,
      "Density" : 3.045970795024338,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "a39bc28f-e17a-4f77-9cc7-50a0d5c4f935",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48768991501497816,
      "MetricsIntensity" : 0.0328605008200142,
      "Density" : 0.991192531266514
    },
    "euclideanDistance" : 21.052792478273417,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060306,
      "LackOfCohesion" : 0.48768991501497816,
      "MetricsIntensity" : 0.0328605008200142,
      "Density" : 3.0449134199134194,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.PluginManager.PluginUpdateMonitor.PluginUpdateInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.tasks._maven.MavenWarningNote'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "51163435-7d15-40fc-97fa-2d1fd0f0454b",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4865971162409126,
      "MetricsIntensity" : 0.03283592122415289,
      "Density" : 0.9915448300158535
    },
    "euclideanDistance" : 21.052814921078554,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.4865971162409126,
      "MetricsIntensity" : 0.032835921224152895,
      "Density" : 3.0427027027027025,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "5ccb9e29-ebff-4fd0-a5c9-ab949b4a9d6e",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48812454928314897,
      "MetricsIntensity" : 0.032840515261306095,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 21.052949121381285,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294413688978359,
      "LackOfCohesion" : 0.48812454928314897,
      "MetricsIntensity" : 0.032840515261306095,
      "Density" : 3.0611802923659983,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "283d1127-c7cd-4906-8e07-5f5203550adf",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48629347798085276,
      "MetricsIntensity" : 0.03278966800348239,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 21.05315645720349,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.53192559074912,
      "LackOfCohesion" : 0.48629347798085276,
      "MetricsIntensity" : 0.03278966800348239,
      "Density" : 3.0626688276607243,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "350fe59f-6a4f-4ab5-9db3-446fce698131",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48702182139273575,
      "MetricsIntensity" : 0.032807681742678785,
      "Density" : 0.9989431037519817
    },
    "euclideanDistance" : 21.053221242591512,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040200998,
      "LackOfCohesion" : 0.48702182139273575,
      "MetricsIntensity" : 0.032807681742678785,
      "Density" : 3.0620950323974077,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "54f5f5b2-c0fe-4479-9a08-d288731bd51e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4875819363471855,
      "MetricsIntensity" : 0.03288356420578088,
      "Density" : 0.9876695437731196
    },
    "euclideanDistance" : 22.05022312301429,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145305,
      "LackOfCohesion" : 0.4875819363471855,
      "MetricsIntensity" : 0.03288356420578088,
      "Density" : 3.0340909090909087,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.PluginManager.PluginUpdateMonitor.PluginUpdateInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.tasks._maven.MavenWarningNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.tasks._maven.MavenWarningNote'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "7b19e86d-9b93-4982-a5b5-8153c618812f",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4878665368094748,
      "MetricsIntensity" : 0.03288740993823318,
      "Density" : 0.9964770125066056
    },
    "euclideanDistance" : 22.050610810250596,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5286432160804015,
      "LackOfCohesion" : 0.4878665368094748,
      "MetricsIntensity" : 0.03288740993823318,
      "Density" : 3.0594916170903206,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1c7bb5d4-2ed8-4d42-9315-652491692f0a",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4887371157617764,
      "MetricsIntensity" : 0.03285736845878437,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 22.050624203198915,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284062342885871,
      "LackOfCohesion" : 0.4887371157617764,
      "MetricsIntensity" : 0.03285736845878437,
      "Density" : 3.0627705627705626,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "178d7c88-52f0-4ac2-8ede-86883f92be08",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48926708281267833,
      "MetricsIntensity" : 0.03283742724174011,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 24.046422838211193,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058822,
      "LackOfCohesion" : 0.48926708281267833,
      "MetricsIntensity" : 0.03283742724174011,
      "Density" : 3.058950784207679,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "db09e4db-44ce-4795-a35d-9354893afe29",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4877012469010608,
      "MetricsIntensity" : 0.03286160594875773,
      "Density" : 0.9913686806411838
    },
    "euclideanDistance" : 25.044369257096818,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060304,
      "LackOfCohesion" : 0.4877012469010608,
      "MetricsIntensity" : 0.03286160594875773,
      "Density" : 3.04380746349378,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "2a36f410-651f-4119-b01c-137caae6a479",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4880305283958327,
      "MetricsIntensity" : 0.03286202598025539,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 25.044525107399778,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972356,
      "LackOfCohesion" : 0.4880305283958327,
      "MetricsIntensity" : 0.03286202598025539,
      "Density" : 3.0600649350649345,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "50f2fa27-4c4b-410f-bc2c-f2d633883cfa",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4885203411528078,
      "MetricsIntensity" : 0.03288096745741696,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 26.042798625943046,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018113,
      "LackOfCohesion" : 0.4885203411528078,
      "MetricsIntensity" : 0.03288096745741697,
      "Density" : 3.060638873849487,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "13a1f656-5b5e-4981-955d-1f82ce098ba8",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48974998667260655,
      "MetricsIntensity" : 0.03289848444574199,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 26.042803324719625,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.48974998667260655,
      "MetricsIntensity" : 0.03289848444574199,
      "Density" : 3.059523809523809,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "a6aa66b8-aa93-40e2-afea-06e90d09b387",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4883875299343825,
      "MetricsIntensity" : 0.03280839281580717,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 26.042944879118963,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311557788944723,
      "LackOfCohesion" : 0.4883875299343825,
      "MetricsIntensity" : 0.03280839281580717,
      "Density" : 3.0605405405405404,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.VariableResolver.Union'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "4c447019-2491-4741-9e4d-dd5814f20d46",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48607580043396453,
      "MetricsIntensity" : 0.032830158234791386,
      "Density" : 0.9929540250132112
    },
    "euclideanDistance" : 27.04110457012467,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145303,
      "LackOfCohesion" : 0.48607580043396453,
      "MetricsIntensity" : 0.03283015823479138,
      "Density" : 3.0453808752025933,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "802bec50-7b80-46b1-a972-5c91a4e5038a",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4893486602508717,
      "MetricsIntensity" : 0.03284875068210244,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 31.03599507636321,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058818,
      "LackOfCohesion" : 0.4893486602508717,
      "MetricsIntensity" : 0.03284875068210244,
      "Density" : 3.0610810810810807,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a6a4ce43-a1ba-4729-92a7-e49bef25c712",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48939462458255045,
      "MetricsIntensity" : 0.03286775975357941,
      "Density" : 0.9883741412717985
    },
    "euclideanDistance" : 34.032526793067454,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.48939462458255045,
      "MetricsIntensity" : 0.032867759753579404,
      "Density" : 3.0346133044889125,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.FilePath.FileCallableWrapperFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.JenkinsHttpSessionListener'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.VirtualFile.CollectFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.TimeZoneProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6ab1d782-fa80-433e-9aa2-33a3bef513d7",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4892853121284194,
      "MetricsIntensity" : 0.03283260812893125,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 35.031792574468334,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284348263714143,
      "LackOfCohesion" : 0.4892853121284194,
      "MetricsIntensity" : 0.03283260812893125,
      "Density" : 3.059523809523809,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.ChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.queue.WorkUnitContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.management.AdministrativeMonitorsConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.NoHomeDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.cli.InstallPluginCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.tasks.ArtifactArchiver.ListFiles'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.AbstractTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "0fb55a3a-5f59-454c-855d-e159f0a5b860",
    "objectives" : {
      "NumberOfConcerns" : 0.9947472094550229,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4862893479910371,
      "MetricsIntensity" : 0.03295298523867918,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 38.02917230821329,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5256797583081565,
      "LackOfCohesion" : 0.4862893479910371,
      "MetricsIntensity" : 0.03295298523867918,
      "Density" : 3.0612134344528714,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.View.UserInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.model.DefaultSimplePageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.model.DefaultSimplePageDecorator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.declarative.CLIRegisterer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.security.SparseACL.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.util.IOUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.LoadStatistics.LoadStatisticsUpdater'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.model.LoadStatistics.LoadStatisticsUpdater'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Descriptor.NewInstanceBindInterceptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Descriptor.NewInstanceBindInterceptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Descriptor.NewInstanceBindInterceptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.views.JobColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SetLastModified'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.util.AdaptedIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.util.AdaptedIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.ExpressionFactory2.JellyJexlContext'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='jenkins.model.Jenkins.EnforceSlaveAgentPortAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.telemetry.Telemetry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='jenkins.model.ParameterizedJobMixIn'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.util.ChartUtil.NumberOnlyBuildLabel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='Visitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='Visitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='Visitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='Visitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='Visitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='Visitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.slaves.CloudRetentionStrategy'"
      } ]
    } ]
  } ]
}